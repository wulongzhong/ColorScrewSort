// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PbDataTable.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ConfigPB {

  /// <summary>Holder for reflection information generated from PbDataTable.proto</summary>
  public static partial class PbDataTableReflection {

    #region Descriptor
    /// <summary>File descriptor for PbDataTable.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PbDataTableReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQYkRhdGFUYWJsZS5wcm90bxIIQ29uZmlnUEIiewoJR2xvYmFsQ2ZnEgsK",
            "A0tleRgBIAEoCRITCgtTdHJpbmdWYWx1ZRgCIAEoCRIQCghJbnRWYWx1ZRgD",
            "IAEoBRITCgtJbnRBcnJWYWx1ZRgEIAMoBRISCgpGbG9hdFZhbHVlGAUgASgC",
            "EhEKCUxvbmdWYWx1ZRgGIAEoAyKKAwoMTG9jYWxpemF0aW9uEjQKCk1vZHVs",
            "ZVR5cGUYASABKA4yIC5Db25maWdQQi5Mb2NhbGl6YXRpb25Nb2R1bGVUeXBl",
            "EgsKA0tleRgCIAEoCRIZChFDaGluZXNlU2ltcGxpZmllZBgDIAEoCRIPCgdF",
            "bmdsaXNoGAQgASgJEg4KBkdlcm1hbhgFIAEoCRIOCgZGcmVuY2gYBiABKAkS",
            "DwoHSXRhbGlhbhgHIAEoCRIaChJDaGluZXNlVHJhZGl0aW9uYWwYCCABKAkS",
            "DgoGS29yZWFuGAkgASgJEgwKBFRoYWkYCiABKAkSEgoKVmlldG5hbWVzZRgL",
            "IAEoCRIQCghKYXBhbmVzZRgMIAEoCRINCgVEdXRjaBgNIAEoCRIPCgdTcGFu",
            "aXNoGA4gASgJEhIKClBvcnR1Z3Vlc2UYDyABKAkSDgoGUG9saXNoGBAgASgJ",
            "EhEKCVVrcmFpbmlhbhgRIAEoCRIPCgdSdXNzaWFuGBIgASgJEhIKCkluZG9u",
            "ZXNpYW4YEyABKAkiVwoFU291bmQSCgoCSWQYASABKAkSEQoJQXNzZXRQYXRo",
            "GAIgASgJEg8KB0lzTXVzaWMYAyABKAgSDgoGSXNMb29wGAQgASgIEg4KBlZv",
            "bHVtZRgFIAEoAiJ9CgVUYWJsZRImCglHbG9iYWxDZmcYASADKAsyEy5Db25m",
            "aWdQQi5HbG9iYWxDZmcSLAoMTG9jYWxpemF0aW9uGAIgAygLMhYuQ29uZmln",
            "UEIuTG9jYWxpemF0aW9uEh4KBVNvdW5kGAMgAygLMg8uQ29uZmlnUEIuU291",
            "bmQqOQoWTG9jYWxpemF0aW9uTW9kdWxlVHlwZRIKCgZHbG9iYWwQABIKCgZV",
            "SUhhbGwQARIHCgNNYXgQAmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ConfigPB.LocalizationModuleType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigPB.GlobalCfg), global::ConfigPB.GlobalCfg.Parser, new[]{ "Key", "StringValue", "IntValue", "IntArrValue", "FloatValue", "LongValue" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigPB.Localization), global::ConfigPB.Localization.Parser, new[]{ "ModuleType", "Key", "ChineseSimplified", "English", "German", "French", "Italian", "ChineseTraditional", "Korean", "Thai", "Vietnamese", "Japanese", "Dutch", "Spanish", "Portuguese", "Polish", "Ukrainian", "Russian", "Indonesian" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigPB.Sound), global::ConfigPB.Sound.Parser, new[]{ "Id", "AssetPath", "IsMusic", "IsLoop", "Volume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ConfigPB.Table), global::ConfigPB.Table.Parser, new[]{ "GlobalCfg", "Localization", "Sound" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LocalizationModuleType {
    /// <summary>
    /// 全局 
    /// </summary>
    [pbr::OriginalName("Global")] Global = 0,
    /// <summary>
    /// 大厅UI 
    /// </summary>
    [pbr::OriginalName("UIHall")] Uihall = 1,
    /// <summary>
    /// Max标记 
    /// </summary>
    [pbr::OriginalName("Max")] Max = 2,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GlobalCfg : pb::IMessage<GlobalCfg>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GlobalCfg> _parser = new pb::MessageParser<GlobalCfg>(() => new GlobalCfg());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GlobalCfg> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigPB.PbDataTableReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlobalCfg() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlobalCfg(GlobalCfg other) : this() {
      key_ = other.key_;
      stringValue_ = other.stringValue_;
      intValue_ = other.intValue_;
      intArrValue_ = other.intArrValue_.Clone();
      floatValue_ = other.floatValue_;
      longValue_ = other.longValue_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlobalCfg Clone() {
      return new GlobalCfg(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    /// <summary>
    /// 键 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StringValue" field.</summary>
    public const int StringValueFieldNumber = 2;
    private string stringValue_ = "";
    /// <summary>
    /// String值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StringValue {
      get { return stringValue_; }
      set {
        stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IntValue" field.</summary>
    public const int IntValueFieldNumber = 3;
    private int intValue_;
    /// <summary>
    /// Int值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int IntValue {
      get { return intValue_; }
      set {
        intValue_ = value;
      }
    }

    /// <summary>Field number for the "IntArrValue" field.</summary>
    public const int IntArrValueFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_intArrValue_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> intArrValue_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// Int数组值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> IntArrValue {
      get { return intArrValue_; }
    }

    /// <summary>Field number for the "FloatValue" field.</summary>
    public const int FloatValueFieldNumber = 5;
    private float floatValue_;
    /// <summary>
    /// Float值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float FloatValue {
      get { return floatValue_; }
      set {
        floatValue_ = value;
      }
    }

    /// <summary>Field number for the "LongValue" field.</summary>
    public const int LongValueFieldNumber = 6;
    private long longValue_;
    /// <summary>
    /// Long值 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LongValue {
      get { return longValue_; }
      set {
        longValue_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GlobalCfg);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GlobalCfg other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (StringValue != other.StringValue) return false;
      if (IntValue != other.IntValue) return false;
      if(!intArrValue_.Equals(other.intArrValue_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatValue, other.FloatValue)) return false;
      if (LongValue != other.LongValue) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (StringValue.Length != 0) hash ^= StringValue.GetHashCode();
      if (IntValue != 0) hash ^= IntValue.GetHashCode();
      hash ^= intArrValue_.GetHashCode();
      if (FloatValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatValue);
      if (LongValue != 0L) hash ^= LongValue.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (StringValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StringValue);
      }
      if (IntValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IntValue);
      }
      intArrValue_.WriteTo(output, _repeated_intArrValue_codec);
      if (FloatValue != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(FloatValue);
      }
      if (LongValue != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LongValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (StringValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StringValue);
      }
      if (IntValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IntValue);
      }
      intArrValue_.WriteTo(ref output, _repeated_intArrValue_codec);
      if (FloatValue != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(FloatValue);
      }
      if (LongValue != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LongValue);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (StringValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (IntValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IntValue);
      }
      size += intArrValue_.CalculateSize(_repeated_intArrValue_codec);
      if (FloatValue != 0F) {
        size += 1 + 4;
      }
      if (LongValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LongValue);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GlobalCfg other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.StringValue.Length != 0) {
        StringValue = other.StringValue;
      }
      if (other.IntValue != 0) {
        IntValue = other.IntValue;
      }
      intArrValue_.Add(other.intArrValue_);
      if (other.FloatValue != 0F) {
        FloatValue = other.FloatValue;
      }
      if (other.LongValue != 0L) {
        LongValue = other.LongValue;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            StringValue = input.ReadString();
            break;
          }
          case 24: {
            IntValue = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            intArrValue_.AddEntriesFrom(input, _repeated_intArrValue_codec);
            break;
          }
          case 45: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 48: {
            LongValue = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            StringValue = input.ReadString();
            break;
          }
          case 24: {
            IntValue = input.ReadInt32();
            break;
          }
          case 34:
          case 32: {
            intArrValue_.AddEntriesFrom(ref input, _repeated_intArrValue_codec);
            break;
          }
          case 45: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 48: {
            LongValue = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Localization : pb::IMessage<Localization>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Localization> _parser = new pb::MessageParser<Localization>(() => new Localization());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Localization> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigPB.PbDataTableReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Localization() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Localization(Localization other) : this() {
      moduleType_ = other.moduleType_;
      key_ = other.key_;
      chineseSimplified_ = other.chineseSimplified_;
      english_ = other.english_;
      german_ = other.german_;
      french_ = other.french_;
      italian_ = other.italian_;
      chineseTraditional_ = other.chineseTraditional_;
      korean_ = other.korean_;
      thai_ = other.thai_;
      vietnamese_ = other.vietnamese_;
      japanese_ = other.japanese_;
      dutch_ = other.dutch_;
      spanish_ = other.spanish_;
      portuguese_ = other.portuguese_;
      polish_ = other.polish_;
      ukrainian_ = other.ukrainian_;
      russian_ = other.russian_;
      indonesian_ = other.indonesian_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Localization Clone() {
      return new Localization(this);
    }

    /// <summary>Field number for the "ModuleType" field.</summary>
    public const int ModuleTypeFieldNumber = 1;
    private global::ConfigPB.LocalizationModuleType moduleType_ = global::ConfigPB.LocalizationModuleType.Global;
    /// <summary>
    /// 模块类型 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ConfigPB.LocalizationModuleType ModuleType {
      get { return moduleType_; }
      set {
        moduleType_ = value;
      }
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 2;
    private string key_ = "";
    /// <summary>
    /// Key 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChineseSimplified" field.</summary>
    public const int ChineseSimplifiedFieldNumber = 3;
    private string chineseSimplified_ = "";
    /// <summary>
    /// 简体中文 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChineseSimplified {
      get { return chineseSimplified_; }
      set {
        chineseSimplified_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "English" field.</summary>
    public const int EnglishFieldNumber = 4;
    private string english_ = "";
    /// <summary>
    /// 英文 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string English {
      get { return english_; }
      set {
        english_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "German" field.</summary>
    public const int GermanFieldNumber = 5;
    private string german_ = "";
    /// <summary>
    /// 德语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string German {
      get { return german_; }
      set {
        german_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "French" field.</summary>
    public const int FrenchFieldNumber = 6;
    private string french_ = "";
    /// <summary>
    /// 法语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string French {
      get { return french_; }
      set {
        french_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Italian" field.</summary>
    public const int ItalianFieldNumber = 7;
    private string italian_ = "";
    /// <summary>
    /// 意大利语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Italian {
      get { return italian_; }
      set {
        italian_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ChineseTraditional" field.</summary>
    public const int ChineseTraditionalFieldNumber = 8;
    private string chineseTraditional_ = "";
    /// <summary>
    /// 繁体 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ChineseTraditional {
      get { return chineseTraditional_; }
      set {
        chineseTraditional_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Korean" field.</summary>
    public const int KoreanFieldNumber = 9;
    private string korean_ = "";
    /// <summary>
    /// 韩语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Korean {
      get { return korean_; }
      set {
        korean_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Thai" field.</summary>
    public const int ThaiFieldNumber = 10;
    private string thai_ = "";
    /// <summary>
    /// 泰语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Thai {
      get { return thai_; }
      set {
        thai_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Vietnamese" field.</summary>
    public const int VietnameseFieldNumber = 11;
    private string vietnamese_ = "";
    /// <summary>
    /// 越南语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Vietnamese {
      get { return vietnamese_; }
      set {
        vietnamese_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Japanese" field.</summary>
    public const int JapaneseFieldNumber = 12;
    private string japanese_ = "";
    /// <summary>
    /// 日语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Japanese {
      get { return japanese_; }
      set {
        japanese_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Dutch" field.</summary>
    public const int DutchFieldNumber = 13;
    private string dutch_ = "";
    /// <summary>
    /// 荷兰语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Dutch {
      get { return dutch_; }
      set {
        dutch_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Spanish" field.</summary>
    public const int SpanishFieldNumber = 14;
    private string spanish_ = "";
    /// <summary>
    /// 西班牙语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Spanish {
      get { return spanish_; }
      set {
        spanish_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Portuguese" field.</summary>
    public const int PortugueseFieldNumber = 15;
    private string portuguese_ = "";
    /// <summary>
    /// 葡萄牙语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Portuguese {
      get { return portuguese_; }
      set {
        portuguese_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Polish" field.</summary>
    public const int PolishFieldNumber = 16;
    private string polish_ = "";
    /// <summary>
    /// 波兰语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Polish {
      get { return polish_; }
      set {
        polish_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Ukrainian" field.</summary>
    public const int UkrainianFieldNumber = 17;
    private string ukrainian_ = "";
    /// <summary>
    /// 乌克兰语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ukrainian {
      get { return ukrainian_; }
      set {
        ukrainian_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Russian" field.</summary>
    public const int RussianFieldNumber = 18;
    private string russian_ = "";
    /// <summary>
    /// 俄罗斯语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Russian {
      get { return russian_; }
      set {
        russian_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Indonesian" field.</summary>
    public const int IndonesianFieldNumber = 19;
    private string indonesian_ = "";
    /// <summary>
    /// 印度尼西亚语 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Indonesian {
      get { return indonesian_; }
      set {
        indonesian_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Localization);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Localization other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModuleType != other.ModuleType) return false;
      if (Key != other.Key) return false;
      if (ChineseSimplified != other.ChineseSimplified) return false;
      if (English != other.English) return false;
      if (German != other.German) return false;
      if (French != other.French) return false;
      if (Italian != other.Italian) return false;
      if (ChineseTraditional != other.ChineseTraditional) return false;
      if (Korean != other.Korean) return false;
      if (Thai != other.Thai) return false;
      if (Vietnamese != other.Vietnamese) return false;
      if (Japanese != other.Japanese) return false;
      if (Dutch != other.Dutch) return false;
      if (Spanish != other.Spanish) return false;
      if (Portuguese != other.Portuguese) return false;
      if (Polish != other.Polish) return false;
      if (Ukrainian != other.Ukrainian) return false;
      if (Russian != other.Russian) return false;
      if (Indonesian != other.Indonesian) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ModuleType != global::ConfigPB.LocalizationModuleType.Global) hash ^= ModuleType.GetHashCode();
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (ChineseSimplified.Length != 0) hash ^= ChineseSimplified.GetHashCode();
      if (English.Length != 0) hash ^= English.GetHashCode();
      if (German.Length != 0) hash ^= German.GetHashCode();
      if (French.Length != 0) hash ^= French.GetHashCode();
      if (Italian.Length != 0) hash ^= Italian.GetHashCode();
      if (ChineseTraditional.Length != 0) hash ^= ChineseTraditional.GetHashCode();
      if (Korean.Length != 0) hash ^= Korean.GetHashCode();
      if (Thai.Length != 0) hash ^= Thai.GetHashCode();
      if (Vietnamese.Length != 0) hash ^= Vietnamese.GetHashCode();
      if (Japanese.Length != 0) hash ^= Japanese.GetHashCode();
      if (Dutch.Length != 0) hash ^= Dutch.GetHashCode();
      if (Spanish.Length != 0) hash ^= Spanish.GetHashCode();
      if (Portuguese.Length != 0) hash ^= Portuguese.GetHashCode();
      if (Polish.Length != 0) hash ^= Polish.GetHashCode();
      if (Ukrainian.Length != 0) hash ^= Ukrainian.GetHashCode();
      if (Russian.Length != 0) hash ^= Russian.GetHashCode();
      if (Indonesian.Length != 0) hash ^= Indonesian.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ModuleType != global::ConfigPB.LocalizationModuleType.Global) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ModuleType);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (ChineseSimplified.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChineseSimplified);
      }
      if (English.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(English);
      }
      if (German.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(German);
      }
      if (French.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(French);
      }
      if (Italian.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Italian);
      }
      if (ChineseTraditional.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ChineseTraditional);
      }
      if (Korean.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Korean);
      }
      if (Thai.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Thai);
      }
      if (Vietnamese.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Vietnamese);
      }
      if (Japanese.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Japanese);
      }
      if (Dutch.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Dutch);
      }
      if (Spanish.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Spanish);
      }
      if (Portuguese.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Portuguese);
      }
      if (Polish.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Polish);
      }
      if (Ukrainian.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ukrainian);
      }
      if (Russian.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Russian);
      }
      if (Indonesian.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Indonesian);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ModuleType != global::ConfigPB.LocalizationModuleType.Global) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ModuleType);
      }
      if (Key.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Key);
      }
      if (ChineseSimplified.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ChineseSimplified);
      }
      if (English.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(English);
      }
      if (German.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(German);
      }
      if (French.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(French);
      }
      if (Italian.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Italian);
      }
      if (ChineseTraditional.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ChineseTraditional);
      }
      if (Korean.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Korean);
      }
      if (Thai.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Thai);
      }
      if (Vietnamese.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Vietnamese);
      }
      if (Japanese.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Japanese);
      }
      if (Dutch.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Dutch);
      }
      if (Spanish.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Spanish);
      }
      if (Portuguese.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Portuguese);
      }
      if (Polish.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Polish);
      }
      if (Ukrainian.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Ukrainian);
      }
      if (Russian.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Russian);
      }
      if (Indonesian.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Indonesian);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ModuleType != global::ConfigPB.LocalizationModuleType.Global) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ModuleType);
      }
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (ChineseSimplified.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChineseSimplified);
      }
      if (English.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(English);
      }
      if (German.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(German);
      }
      if (French.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(French);
      }
      if (Italian.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Italian);
      }
      if (ChineseTraditional.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChineseTraditional);
      }
      if (Korean.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Korean);
      }
      if (Thai.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Thai);
      }
      if (Vietnamese.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Vietnamese);
      }
      if (Japanese.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Japanese);
      }
      if (Dutch.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Dutch);
      }
      if (Spanish.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Spanish);
      }
      if (Portuguese.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Portuguese);
      }
      if (Polish.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Polish);
      }
      if (Ukrainian.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Ukrainian);
      }
      if (Russian.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Russian);
      }
      if (Indonesian.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Indonesian);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Localization other) {
      if (other == null) {
        return;
      }
      if (other.ModuleType != global::ConfigPB.LocalizationModuleType.Global) {
        ModuleType = other.ModuleType;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.ChineseSimplified.Length != 0) {
        ChineseSimplified = other.ChineseSimplified;
      }
      if (other.English.Length != 0) {
        English = other.English;
      }
      if (other.German.Length != 0) {
        German = other.German;
      }
      if (other.French.Length != 0) {
        French = other.French;
      }
      if (other.Italian.Length != 0) {
        Italian = other.Italian;
      }
      if (other.ChineseTraditional.Length != 0) {
        ChineseTraditional = other.ChineseTraditional;
      }
      if (other.Korean.Length != 0) {
        Korean = other.Korean;
      }
      if (other.Thai.Length != 0) {
        Thai = other.Thai;
      }
      if (other.Vietnamese.Length != 0) {
        Vietnamese = other.Vietnamese;
      }
      if (other.Japanese.Length != 0) {
        Japanese = other.Japanese;
      }
      if (other.Dutch.Length != 0) {
        Dutch = other.Dutch;
      }
      if (other.Spanish.Length != 0) {
        Spanish = other.Spanish;
      }
      if (other.Portuguese.Length != 0) {
        Portuguese = other.Portuguese;
      }
      if (other.Polish.Length != 0) {
        Polish = other.Polish;
      }
      if (other.Ukrainian.Length != 0) {
        Ukrainian = other.Ukrainian;
      }
      if (other.Russian.Length != 0) {
        Russian = other.Russian;
      }
      if (other.Indonesian.Length != 0) {
        Indonesian = other.Indonesian;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ModuleType = (global::ConfigPB.LocalizationModuleType) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            ChineseSimplified = input.ReadString();
            break;
          }
          case 34: {
            English = input.ReadString();
            break;
          }
          case 42: {
            German = input.ReadString();
            break;
          }
          case 50: {
            French = input.ReadString();
            break;
          }
          case 58: {
            Italian = input.ReadString();
            break;
          }
          case 66: {
            ChineseTraditional = input.ReadString();
            break;
          }
          case 74: {
            Korean = input.ReadString();
            break;
          }
          case 82: {
            Thai = input.ReadString();
            break;
          }
          case 90: {
            Vietnamese = input.ReadString();
            break;
          }
          case 98: {
            Japanese = input.ReadString();
            break;
          }
          case 106: {
            Dutch = input.ReadString();
            break;
          }
          case 114: {
            Spanish = input.ReadString();
            break;
          }
          case 122: {
            Portuguese = input.ReadString();
            break;
          }
          case 130: {
            Polish = input.ReadString();
            break;
          }
          case 138: {
            Ukrainian = input.ReadString();
            break;
          }
          case 146: {
            Russian = input.ReadString();
            break;
          }
          case 154: {
            Indonesian = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ModuleType = (global::ConfigPB.LocalizationModuleType) input.ReadEnum();
            break;
          }
          case 18: {
            Key = input.ReadString();
            break;
          }
          case 26: {
            ChineseSimplified = input.ReadString();
            break;
          }
          case 34: {
            English = input.ReadString();
            break;
          }
          case 42: {
            German = input.ReadString();
            break;
          }
          case 50: {
            French = input.ReadString();
            break;
          }
          case 58: {
            Italian = input.ReadString();
            break;
          }
          case 66: {
            ChineseTraditional = input.ReadString();
            break;
          }
          case 74: {
            Korean = input.ReadString();
            break;
          }
          case 82: {
            Thai = input.ReadString();
            break;
          }
          case 90: {
            Vietnamese = input.ReadString();
            break;
          }
          case 98: {
            Japanese = input.ReadString();
            break;
          }
          case 106: {
            Dutch = input.ReadString();
            break;
          }
          case 114: {
            Spanish = input.ReadString();
            break;
          }
          case 122: {
            Portuguese = input.ReadString();
            break;
          }
          case 130: {
            Polish = input.ReadString();
            break;
          }
          case 138: {
            Ukrainian = input.ReadString();
            break;
          }
          case 146: {
            Russian = input.ReadString();
            break;
          }
          case 154: {
            Indonesian = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Sound : pb::IMessage<Sound>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Sound> _parser = new pb::MessageParser<Sound>(() => new Sound());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Sound> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigPB.PbDataTableReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sound() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sound(Sound other) : this() {
      id_ = other.id_;
      assetPath_ = other.assetPath_;
      isMusic_ = other.isMusic_;
      isLoop_ = other.isLoop_;
      volume_ = other.volume_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Sound Clone() {
      return new Sound(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// 声音id 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AssetPath" field.</summary>
    public const int AssetPathFieldNumber = 2;
    private string assetPath_ = "";
    /// <summary>
    /// 资源路径 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AssetPath {
      get { return assetPath_; }
      set {
        assetPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsMusic" field.</summary>
    public const int IsMusicFieldNumber = 3;
    private bool isMusic_;
    /// <summary>
    /// 是否背景音乐 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsMusic {
      get { return isMusic_; }
      set {
        isMusic_ = value;
      }
    }

    /// <summary>Field number for the "IsLoop" field.</summary>
    public const int IsLoopFieldNumber = 4;
    private bool isLoop_;
    /// <summary>
    /// 是否循环 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLoop {
      get { return isLoop_; }
      set {
        isLoop_ = value;
      }
    }

    /// <summary>Field number for the "Volume" field.</summary>
    public const int VolumeFieldNumber = 5;
    private float volume_;
    /// <summary>
    /// 音量 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Sound);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Sound other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AssetPath != other.AssetPath) return false;
      if (IsMusic != other.IsMusic) return false;
      if (IsLoop != other.IsLoop) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Volume, other.Volume)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (AssetPath.Length != 0) hash ^= AssetPath.GetHashCode();
      if (IsMusic != false) hash ^= IsMusic.GetHashCode();
      if (IsLoop != false) hash ^= IsLoop.GetHashCode();
      if (Volume != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Volume);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (AssetPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AssetPath);
      }
      if (IsMusic != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsMusic);
      }
      if (IsLoop != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsLoop);
      }
      if (Volume != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (AssetPath.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AssetPath);
      }
      if (IsMusic != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsMusic);
      }
      if (IsLoop != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsLoop);
      }
      if (Volume != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Volume);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (AssetPath.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AssetPath);
      }
      if (IsMusic != false) {
        size += 1 + 1;
      }
      if (IsLoop != false) {
        size += 1 + 1;
      }
      if (Volume != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Sound other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.AssetPath.Length != 0) {
        AssetPath = other.AssetPath;
      }
      if (other.IsMusic != false) {
        IsMusic = other.IsMusic;
      }
      if (other.IsLoop != false) {
        IsLoop = other.IsLoop;
      }
      if (other.Volume != 0F) {
        Volume = other.Volume;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            AssetPath = input.ReadString();
            break;
          }
          case 24: {
            IsMusic = input.ReadBool();
            break;
          }
          case 32: {
            IsLoop = input.ReadBool();
            break;
          }
          case 45: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            AssetPath = input.ReadString();
            break;
          }
          case 24: {
            IsMusic = input.ReadBool();
            break;
          }
          case 32: {
            IsLoop = input.ReadBool();
            break;
          }
          case 45: {
            Volume = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Combine struct
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Table : pb::IMessage<Table>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Table> _parser = new pb::MessageParser<Table>(() => new Table());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Table> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ConfigPB.PbDataTableReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Table() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Table(Table other) : this() {
      globalCfg_ = other.globalCfg_.Clone();
      localization_ = other.localization_.Clone();
      sound_ = other.sound_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Table Clone() {
      return new Table(this);
    }

    /// <summary>Field number for the "GlobalCfg" field.</summary>
    public const int GlobalCfgFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ConfigPB.GlobalCfg> _repeated_globalCfg_codec
        = pb::FieldCodec.ForMessage(10, global::ConfigPB.GlobalCfg.Parser);
    private readonly pbc::RepeatedField<global::ConfigPB.GlobalCfg> globalCfg_ = new pbc::RepeatedField<global::ConfigPB.GlobalCfg>();
    /// <summary>
    /// table: GlobalCfg 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ConfigPB.GlobalCfg> GlobalCfg {
      get { return globalCfg_; }
    }

    /// <summary>Field number for the "Localization" field.</summary>
    public const int LocalizationFieldNumber = 2;
    private static readonly pb::FieldCodec<global::ConfigPB.Localization> _repeated_localization_codec
        = pb::FieldCodec.ForMessage(18, global::ConfigPB.Localization.Parser);
    private readonly pbc::RepeatedField<global::ConfigPB.Localization> localization_ = new pbc::RepeatedField<global::ConfigPB.Localization>();
    /// <summary>
    /// table: Localization 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ConfigPB.Localization> Localization {
      get { return localization_; }
    }

    /// <summary>Field number for the "Sound" field.</summary>
    public const int SoundFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ConfigPB.Sound> _repeated_sound_codec
        = pb::FieldCodec.ForMessage(26, global::ConfigPB.Sound.Parser);
    private readonly pbc::RepeatedField<global::ConfigPB.Sound> sound_ = new pbc::RepeatedField<global::ConfigPB.Sound>();
    /// <summary>
    /// table: Sound 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::ConfigPB.Sound> Sound {
      get { return sound_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Table);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Table other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!globalCfg_.Equals(other.globalCfg_)) return false;
      if(!localization_.Equals(other.localization_)) return false;
      if(!sound_.Equals(other.sound_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= globalCfg_.GetHashCode();
      hash ^= localization_.GetHashCode();
      hash ^= sound_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      globalCfg_.WriteTo(output, _repeated_globalCfg_codec);
      localization_.WriteTo(output, _repeated_localization_codec);
      sound_.WriteTo(output, _repeated_sound_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      globalCfg_.WriteTo(ref output, _repeated_globalCfg_codec);
      localization_.WriteTo(ref output, _repeated_localization_codec);
      sound_.WriteTo(ref output, _repeated_sound_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += globalCfg_.CalculateSize(_repeated_globalCfg_codec);
      size += localization_.CalculateSize(_repeated_localization_codec);
      size += sound_.CalculateSize(_repeated_sound_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Table other) {
      if (other == null) {
        return;
      }
      globalCfg_.Add(other.globalCfg_);
      localization_.Add(other.localization_);
      sound_.Add(other.sound_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            globalCfg_.AddEntriesFrom(input, _repeated_globalCfg_codec);
            break;
          }
          case 18: {
            localization_.AddEntriesFrom(input, _repeated_localization_codec);
            break;
          }
          case 26: {
            sound_.AddEntriesFrom(input, _repeated_sound_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            globalCfg_.AddEntriesFrom(ref input, _repeated_globalCfg_codec);
            break;
          }
          case 18: {
            localization_.AddEntriesFrom(ref input, _repeated_localization_codec);
            break;
          }
          case 26: {
            sound_.AddEntriesFrom(ref input, _repeated_sound_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
