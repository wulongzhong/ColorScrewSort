// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from PlayerData.proto</summary>
  public static partial class PlayerDataReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQbGF5ZXJEYXRhLnByb3RvEgNNc2ci3wIKCk5vcm1hbERhdGESEQoJZ29s",
            "ZENvdW50GAEgASgFEhMKC2N1cnJMZXZlbElkGAIgASgFEhoKEmN1cnJTcGVj",
            "aWFsTGV2ZWxJZBgDIAEoBRIeChZuZXh0U3BlY2lhbExldmVsT3BlbklkGAQg",
            "ASgFEhwKFHVubG9ja2VkQmFja0dyb3VuZElkGAUgAygFEh4KFmN1cnJTZWxl",
            "Y3RCYWNrR3JvdW5kSWQYBiABKAUSFQoNdW5sb2NrZWROdXRJZBgHIAMoBRIX",
            "Cg9jdXJyU2VsZWN0TnV0SWQYCCABKAUSGgoSY3VyckNoZXN0RnJhZ0NvdW50",
            "GAkgASgFEhoKEmN1cnJUaGVtZUZyYWdDb3VudBgKIAEoBRIXCg9jdXJyVGhl",
            "bWVGcmFnSWQYCyABKAUSFQoNcHJvcFVuZG9Db3VudBgMIAEoBRIXCg9wcm9w",
            "QWRkUm93Q291bnQYDSABKAUiVwoKUGxheWVyRGF0YRIOCgZ1c2VySWQYASAB",
            "KAMSFAoMdXNlckRldmljZUlkGAIgASgJEiMKCm5vcm1hbERhdGEYAyABKAsy",
            "Dy5Nc2cuTm9ybWFsRGF0YWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.NormalData), global::Msg.NormalData.Parser, new[]{ "GoldCount", "CurrLevelId", "CurrSpecialLevelId", "NextSpecialLevelOpenId", "UnlockedBackGroundId", "CurrSelectBackGroundId", "UnlockedNutId", "CurrSelectNutId", "CurrChestFragCount", "CurrThemeFragCount", "CurrThemeFragId", "PropUndoCount", "PropAddRowCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.PlayerData), global::Msg.PlayerData.Parser, new[]{ "UserId", "UserDeviceId", "NormalData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NormalData : pb::IMessage<NormalData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NormalData> _parser = new pb::MessageParser<NormalData>(() => new NormalData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NormalData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NormalData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NormalData(NormalData other) : this() {
      goldCount_ = other.goldCount_;
      currLevelId_ = other.currLevelId_;
      currSpecialLevelId_ = other.currSpecialLevelId_;
      nextSpecialLevelOpenId_ = other.nextSpecialLevelOpenId_;
      unlockedBackGroundId_ = other.unlockedBackGroundId_.Clone();
      currSelectBackGroundId_ = other.currSelectBackGroundId_;
      unlockedNutId_ = other.unlockedNutId_.Clone();
      currSelectNutId_ = other.currSelectNutId_;
      currChestFragCount_ = other.currChestFragCount_;
      currThemeFragCount_ = other.currThemeFragCount_;
      currThemeFragId_ = other.currThemeFragId_;
      propUndoCount_ = other.propUndoCount_;
      propAddRowCount_ = other.propAddRowCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NormalData Clone() {
      return new NormalData(this);
    }

    /// <summary>Field number for the "goldCount" field.</summary>
    public const int GoldCountFieldNumber = 1;
    private int goldCount_;
    /// <summary>
    ///蓝币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GoldCount {
      get { return goldCount_; }
      set {
        goldCount_ = value;
      }
    }

    /// <summary>Field number for the "currLevelId" field.</summary>
    public const int CurrLevelIdFieldNumber = 2;
    private int currLevelId_;
    /// <summary>
    ///当前关卡ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrLevelId {
      get { return currLevelId_; }
      set {
        currLevelId_ = value;
      }
    }

    /// <summary>Field number for the "currSpecialLevelId" field.</summary>
    public const int CurrSpecialLevelIdFieldNumber = 3;
    private int currSpecialLevelId_;
    /// <summary>
    ///特殊关卡ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrSpecialLevelId {
      get { return currSpecialLevelId_; }
      set {
        currSpecialLevelId_ = value;
      }
    }

    /// <summary>Field number for the "nextSpecialLevelOpenId" field.</summary>
    public const int NextSpecialLevelOpenIdFieldNumber = 4;
    private int nextSpecialLevelOpenId_;
    /// <summary>
    ///下一个特殊关卡的开启ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NextSpecialLevelOpenId {
      get { return nextSpecialLevelOpenId_; }
      set {
        nextSpecialLevelOpenId_ = value;
      }
    }

    /// <summary>Field number for the "unlockedBackGroundId" field.</summary>
    public const int UnlockedBackGroundIdFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_unlockedBackGroundId_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> unlockedBackGroundId_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///已解锁的背景ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> UnlockedBackGroundId {
      get { return unlockedBackGroundId_; }
    }

    /// <summary>Field number for the "currSelectBackGroundId" field.</summary>
    public const int CurrSelectBackGroundIdFieldNumber = 6;
    private int currSelectBackGroundId_;
    /// <summary>
    ///当前选择的背景ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrSelectBackGroundId {
      get { return currSelectBackGroundId_; }
      set {
        currSelectBackGroundId_ = value;
      }
    }

    /// <summary>Field number for the "unlockedNutId" field.</summary>
    public const int UnlockedNutIdFieldNumber = 7;
    private static readonly pb::FieldCodec<int> _repeated_unlockedNutId_codec
        = pb::FieldCodec.ForInt32(58);
    private readonly pbc::RepeatedField<int> unlockedNutId_ = new pbc::RepeatedField<int>();
    /// <summary>
    ///已解锁的螺母的ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<int> UnlockedNutId {
      get { return unlockedNutId_; }
    }

    /// <summary>Field number for the "currSelectNutId" field.</summary>
    public const int CurrSelectNutIdFieldNumber = 8;
    private int currSelectNutId_;
    /// <summary>
    ///当前选择的螺母ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrSelectNutId {
      get { return currSelectNutId_; }
      set {
        currSelectNutId_ = value;
      }
    }

    /// <summary>Field number for the "currChestFragCount" field.</summary>
    public const int CurrChestFragCountFieldNumber = 9;
    private int currChestFragCount_;
    /// <summary>
    ///当前宝箱碎片数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrChestFragCount {
      get { return currChestFragCount_; }
      set {
        currChestFragCount_ = value;
      }
    }

    /// <summary>Field number for the "currThemeFragCount" field.</summary>
    public const int CurrThemeFragCountFieldNumber = 10;
    private int currThemeFragCount_;
    /// <summary>
    ///当前皮肤碎片数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrThemeFragCount {
      get { return currThemeFragCount_; }
      set {
        currThemeFragCount_ = value;
      }
    }

    /// <summary>Field number for the "currThemeFragId" field.</summary>
    public const int CurrThemeFragIdFieldNumber = 11;
    private int currThemeFragId_;
    /// <summary>
    ///当前解锁皮肤碎片ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrThemeFragId {
      get { return currThemeFragId_; }
      set {
        currThemeFragId_ = value;
      }
    }

    /// <summary>Field number for the "propUndoCount" field.</summary>
    public const int PropUndoCountFieldNumber = 12;
    private int propUndoCount_;
    /// <summary>
    ///道具撤回数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PropUndoCount {
      get { return propUndoCount_; }
      set {
        propUndoCount_ = value;
      }
    }

    /// <summary>Field number for the "propAddRowCount" field.</summary>
    public const int PropAddRowCountFieldNumber = 13;
    private int propAddRowCount_;
    /// <summary>
    ///道具增加一个螺丝数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PropAddRowCount {
      get { return propAddRowCount_; }
      set {
        propAddRowCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NormalData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NormalData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GoldCount != other.GoldCount) return false;
      if (CurrLevelId != other.CurrLevelId) return false;
      if (CurrSpecialLevelId != other.CurrSpecialLevelId) return false;
      if (NextSpecialLevelOpenId != other.NextSpecialLevelOpenId) return false;
      if(!unlockedBackGroundId_.Equals(other.unlockedBackGroundId_)) return false;
      if (CurrSelectBackGroundId != other.CurrSelectBackGroundId) return false;
      if(!unlockedNutId_.Equals(other.unlockedNutId_)) return false;
      if (CurrSelectNutId != other.CurrSelectNutId) return false;
      if (CurrChestFragCount != other.CurrChestFragCount) return false;
      if (CurrThemeFragCount != other.CurrThemeFragCount) return false;
      if (CurrThemeFragId != other.CurrThemeFragId) return false;
      if (PropUndoCount != other.PropUndoCount) return false;
      if (PropAddRowCount != other.PropAddRowCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GoldCount != 0) hash ^= GoldCount.GetHashCode();
      if (CurrLevelId != 0) hash ^= CurrLevelId.GetHashCode();
      if (CurrSpecialLevelId != 0) hash ^= CurrSpecialLevelId.GetHashCode();
      if (NextSpecialLevelOpenId != 0) hash ^= NextSpecialLevelOpenId.GetHashCode();
      hash ^= unlockedBackGroundId_.GetHashCode();
      if (CurrSelectBackGroundId != 0) hash ^= CurrSelectBackGroundId.GetHashCode();
      hash ^= unlockedNutId_.GetHashCode();
      if (CurrSelectNutId != 0) hash ^= CurrSelectNutId.GetHashCode();
      if (CurrChestFragCount != 0) hash ^= CurrChestFragCount.GetHashCode();
      if (CurrThemeFragCount != 0) hash ^= CurrThemeFragCount.GetHashCode();
      if (CurrThemeFragId != 0) hash ^= CurrThemeFragId.GetHashCode();
      if (PropUndoCount != 0) hash ^= PropUndoCount.GetHashCode();
      if (PropAddRowCount != 0) hash ^= PropAddRowCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GoldCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoldCount);
      }
      if (CurrLevelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrLevelId);
      }
      if (CurrSpecialLevelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrSpecialLevelId);
      }
      if (NextSpecialLevelOpenId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NextSpecialLevelOpenId);
      }
      unlockedBackGroundId_.WriteTo(output, _repeated_unlockedBackGroundId_codec);
      if (CurrSelectBackGroundId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CurrSelectBackGroundId);
      }
      unlockedNutId_.WriteTo(output, _repeated_unlockedNutId_codec);
      if (CurrSelectNutId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurrSelectNutId);
      }
      if (CurrChestFragCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CurrChestFragCount);
      }
      if (CurrThemeFragCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurrThemeFragCount);
      }
      if (CurrThemeFragId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CurrThemeFragId);
      }
      if (PropUndoCount != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PropUndoCount);
      }
      if (PropAddRowCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PropAddRowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GoldCount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GoldCount);
      }
      if (CurrLevelId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrLevelId);
      }
      if (CurrSpecialLevelId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrSpecialLevelId);
      }
      if (NextSpecialLevelOpenId != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NextSpecialLevelOpenId);
      }
      unlockedBackGroundId_.WriteTo(ref output, _repeated_unlockedBackGroundId_codec);
      if (CurrSelectBackGroundId != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CurrSelectBackGroundId);
      }
      unlockedNutId_.WriteTo(ref output, _repeated_unlockedNutId_codec);
      if (CurrSelectNutId != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(CurrSelectNutId);
      }
      if (CurrChestFragCount != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CurrChestFragCount);
      }
      if (CurrThemeFragCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(CurrThemeFragCount);
      }
      if (CurrThemeFragId != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CurrThemeFragId);
      }
      if (PropUndoCount != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PropUndoCount);
      }
      if (PropAddRowCount != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(PropAddRowCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GoldCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldCount);
      }
      if (CurrLevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrLevelId);
      }
      if (CurrSpecialLevelId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrSpecialLevelId);
      }
      if (NextSpecialLevelOpenId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextSpecialLevelOpenId);
      }
      size += unlockedBackGroundId_.CalculateSize(_repeated_unlockedBackGroundId_codec);
      if (CurrSelectBackGroundId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrSelectBackGroundId);
      }
      size += unlockedNutId_.CalculateSize(_repeated_unlockedNutId_codec);
      if (CurrSelectNutId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrSelectNutId);
      }
      if (CurrChestFragCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrChestFragCount);
      }
      if (CurrThemeFragCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrThemeFragCount);
      }
      if (CurrThemeFragId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrThemeFragId);
      }
      if (PropUndoCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropUndoCount);
      }
      if (PropAddRowCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PropAddRowCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NormalData other) {
      if (other == null) {
        return;
      }
      if (other.GoldCount != 0) {
        GoldCount = other.GoldCount;
      }
      if (other.CurrLevelId != 0) {
        CurrLevelId = other.CurrLevelId;
      }
      if (other.CurrSpecialLevelId != 0) {
        CurrSpecialLevelId = other.CurrSpecialLevelId;
      }
      if (other.NextSpecialLevelOpenId != 0) {
        NextSpecialLevelOpenId = other.NextSpecialLevelOpenId;
      }
      unlockedBackGroundId_.Add(other.unlockedBackGroundId_);
      if (other.CurrSelectBackGroundId != 0) {
        CurrSelectBackGroundId = other.CurrSelectBackGroundId;
      }
      unlockedNutId_.Add(other.unlockedNutId_);
      if (other.CurrSelectNutId != 0) {
        CurrSelectNutId = other.CurrSelectNutId;
      }
      if (other.CurrChestFragCount != 0) {
        CurrChestFragCount = other.CurrChestFragCount;
      }
      if (other.CurrThemeFragCount != 0) {
        CurrThemeFragCount = other.CurrThemeFragCount;
      }
      if (other.CurrThemeFragId != 0) {
        CurrThemeFragId = other.CurrThemeFragId;
      }
      if (other.PropUndoCount != 0) {
        PropUndoCount = other.PropUndoCount;
      }
      if (other.PropAddRowCount != 0) {
        PropAddRowCount = other.PropAddRowCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GoldCount = input.ReadInt32();
            break;
          }
          case 16: {
            CurrLevelId = input.ReadInt32();
            break;
          }
          case 24: {
            CurrSpecialLevelId = input.ReadInt32();
            break;
          }
          case 32: {
            NextSpecialLevelOpenId = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            unlockedBackGroundId_.AddEntriesFrom(input, _repeated_unlockedBackGroundId_codec);
            break;
          }
          case 48: {
            CurrSelectBackGroundId = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            unlockedNutId_.AddEntriesFrom(input, _repeated_unlockedNutId_codec);
            break;
          }
          case 64: {
            CurrSelectNutId = input.ReadInt32();
            break;
          }
          case 72: {
            CurrChestFragCount = input.ReadInt32();
            break;
          }
          case 80: {
            CurrThemeFragCount = input.ReadInt32();
            break;
          }
          case 88: {
            CurrThemeFragId = input.ReadInt32();
            break;
          }
          case 96: {
            PropUndoCount = input.ReadInt32();
            break;
          }
          case 104: {
            PropAddRowCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GoldCount = input.ReadInt32();
            break;
          }
          case 16: {
            CurrLevelId = input.ReadInt32();
            break;
          }
          case 24: {
            CurrSpecialLevelId = input.ReadInt32();
            break;
          }
          case 32: {
            NextSpecialLevelOpenId = input.ReadInt32();
            break;
          }
          case 42:
          case 40: {
            unlockedBackGroundId_.AddEntriesFrom(ref input, _repeated_unlockedBackGroundId_codec);
            break;
          }
          case 48: {
            CurrSelectBackGroundId = input.ReadInt32();
            break;
          }
          case 58:
          case 56: {
            unlockedNutId_.AddEntriesFrom(ref input, _repeated_unlockedNutId_codec);
            break;
          }
          case 64: {
            CurrSelectNutId = input.ReadInt32();
            break;
          }
          case 72: {
            CurrChestFragCount = input.ReadInt32();
            break;
          }
          case 80: {
            CurrThemeFragCount = input.ReadInt32();
            break;
          }
          case 88: {
            CurrThemeFragId = input.ReadInt32();
            break;
          }
          case 96: {
            PropUndoCount = input.ReadInt32();
            break;
          }
          case 104: {
            PropAddRowCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerData : pb::IMessage<PlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerData> _parser = new pb::MessageParser<PlayerData>(() => new PlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerData(PlayerData other) : this() {
      userId_ = other.userId_;
      userDeviceId_ = other.userDeviceId_;
      normalData_ = other.normalData_ != null ? other.normalData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerData Clone() {
      return new PlayerData(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userDeviceId" field.</summary>
    public const int UserDeviceIdFieldNumber = 2;
    private string userDeviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserDeviceId {
      get { return userDeviceId_; }
      set {
        userDeviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "normalData" field.</summary>
    public const int NormalDataFieldNumber = 3;
    private global::Msg.NormalData normalData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.NormalData NormalData {
      get { return normalData_; }
      set {
        normalData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserDeviceId != other.UserDeviceId) return false;
      if (!object.Equals(NormalData, other.NormalData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (UserDeviceId.Length != 0) hash ^= UserDeviceId.GetHashCode();
      if (normalData_ != null) hash ^= NormalData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (UserDeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserDeviceId);
      }
      if (normalData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NormalData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (UserDeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserDeviceId);
      }
      if (normalData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NormalData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (UserDeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserDeviceId);
      }
      if (normalData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.UserDeviceId.Length != 0) {
        UserDeviceId = other.UserDeviceId;
      }
      if (other.normalData_ != null) {
        if (normalData_ == null) {
          NormalData = new global::Msg.NormalData();
        }
        NormalData.MergeFrom(other.NormalData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            UserDeviceId = input.ReadString();
            break;
          }
          case 26: {
            if (normalData_ == null) {
              NormalData = new global::Msg.NormalData();
            }
            input.ReadMessage(NormalData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            UserDeviceId = input.ReadString();
            break;
          }
          case 26: {
            if (normalData_ == null) {
              NormalData = new global::Msg.NormalData();
            }
            input.ReadMessage(NormalData);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
