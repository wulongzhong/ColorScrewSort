// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: PlayerData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Msg {

  /// <summary>Holder for reflection information generated from PlayerData.proto</summary>
  public static partial class PlayerDataReflection {

    #region Descriptor
    /// <summary>File descriptor for PlayerData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBQbGF5ZXJEYXRhLnByb3RvEgNNc2ciSwoQVW5sb2NrZWRIZXJvSW5mbxIO",
            "CgZoZXJvSWQYASABKAMSEAoIaGVyb1N0YXIYAiABKAMSFQoNbGlzdE93bmVk",
            "U2tpbhgDIAMoAyI4Cg9Pd25lZFBldEVnZ0luZm8SEAoIcGV0RWdnSWQYASAB",
            "KAMSEwoLcGV0RWdnQ291bnQYAiABKAMiMgoPVW5sb2NrZWRQZXRJbmZvEg0K",
            "BXBldElkGAEgASgDEhAKCHBldExldmVsGAIgASgDIr4HCgpOb3JtYWxEYXRh",
            "EhUKDWJsdWVDb2luQ291bnQYASABKAMSFAoMZGlhbW9uZENvdW50GAIgASgD",
            "EjEKE2xpc3RPd25lZHBldEVnZ0luZm8YAyADKAsyFC5Nc2cuT3duZWRQZXRF",
            "Z2dJbmZvEg8KB2lzTm9BZHMYBCABKAgSGAoQbGlzdFVubG9ja1RhbGVudBgF",
            "IAMoAxIzChRsaXN0VW5sb2NrZWRIZXJvSW5mbxgGIAMoCzIVLk1zZy5Vbmxv",
            "Y2tlZEhlcm9JbmZvEjEKE2xpc3RVbmxvY2tlZFBldEluZm8YByADKAsyFC5N",
            "c2cuVW5sb2NrZWRQZXRJbmZvEhcKD2N1cnJTZWxlY3RQZXRJZBgIIAEoAxIV",
            "Cg1pc0ZpbmlzaEd1aWRlGAkgASgIEhYKDmlzRmluaXNoR3VpZGUyGAogASgI",
            "EhkKEWRhaWx5Q2hlY2tJbkNvdW50GAsgASgDEhwKFG5leHREYWlseUNoZWNr",
            "SW5UaW1lGAwgASgDEhoKEmFkUmV2aXZhbEhlcm9Db3VudBgNIAEoAxIfChdh",
            "ZFNldHRsZW1lbnREb3VibGVDb3VudBgOIAEoAxIcChRhZE9wZW5lZFBldEVn",
            "ZzFDb3VudBgPIAEoAxIcChRhZE9wZW5lZFBldEVnZzJDb3VudBgQIAEoAxIc",
            "ChRhZE9wZW5lZFBldEVnZzNDb3VudBgRIAEoAxIeChZsYXN0UmVmcmVzaEFk",
            "Q291bnRUaW1lGBIgASgDEh8KF2xhc3RHZXRNb250aDFSZXdhcmRUaW1lGBMg",
            "ASgDEh8KF2xhc3RHZXRNb250aDJSZXdhcmRUaW1lGBQgASgDEh0KFWxhc3RW",
            "aWV3TW9udGhDYXJkVGltZRgVIAEoAxInCh9sYXN0Vmlld0xpbWl0ZWRUaW1l",
            "R2lmdFBhY2tUaW1lGBYgASgDEiAKGGxhc3RWaWV3TGltaXRlZFRpbWVMZXZl",
            "bBgXIAEoAxIXCg9yZWNoYXJnZWRBbW91bnQYGCABKAISHgoWY29udGludW91",
            "c0ZhaWx1cmVDb3VudBgZIAEoAxIdChViUGxheUZpcnN0TGV2ZWxCYXR0bGUY",
            "GiABKAgSIAoYbm9ybWFsTW9udGhDYXJkU3RhcnRUaW1lGBsgASgDEh8KF3N1",
            "cGVyTW9udGhDYXJkU3RhcnRUaW1lGBwgASgDEh8KF2dldGVkUmVzZXJ2YXRp",
            "b25SZXdhcmRzGB0gASgIEh0KFXJlc3VycmVjdGlvbkNvaW5Db3VudBghIAEo",
            "AyLHAQoISGFsbERhdGESGgoSbm9yVmVuZGluZ05vd1N0b2NrGAEgASgDEh0K",
            "FW5vclZlbmRpbmdSZXN0b2NrVGltZRgCIAEoAxIcChRub3JWZW5kaW5nR29v",
            "ZEl0ZW1DRBgDIAEoAxIdChVlbmNoYXRWZW5kaW5nTm93U3RvY2sYBCABKAMS",
            "IQoZZW5jaGFudFZlbmRpbmdSZXN0b2NrVGltZRgFIAEoAxIgChhsYXN0T3Bl",
            "bkhhbGxUcmVhc3VyZVRpbWUYBiABKAMiMwoQTGV2ZWxNYXBQYXNzSW5mbxIN",
            "CgVtYXBJZBgBIAEoAxIQCghwYXNzVGltZRgCIAEoAyJCChBMZXZlbE1hcFBh",
            "c3NEYXRhEi4KD2xpc3RNYXBQYXNzSW5mbxgBIAMoCzIVLk1zZy5MZXZlbE1h",
            "cFBhc3NJbmZvIpsDChJMZXZlbE1hcEJhdHRsZURhdGESDQoFbWFwSWQYASAB",
            "KAMSEgoKcmFuZG9tU2VlZBgCIAEoAxIUCgxjdXJyTGV2ZWxOdW0YAyABKAMS",
            "FAoMY3VyclJvb21UeXBlGAQgASgDEhUKDWN1cnJIZXJvTGV2ZWwYBSABKAMS",
            "FQoNY3VyckdvbGRDb3VudBgGIAEoAxIUCgxjdXJyRXhwQ291bnQYByABKAMS",
            "FgoOY3VyckVxdWlwbWVudHMYCCADKAMSFAoMY3VyckFiaWxpdHlzGAkgAygD",
            "EhIKCmV4dHJhQnVmZnMYCiADKAMSGQoRYmlnVHVybnRhYmxlVGltZXMYCyAB",
            "KAMSGQoRc3RvcmVSZWZyZXNoQ291bnQYDCABKAMSGgoSa2lsbE5vcm1hbE1v",
            "YkNvdW50GA0gASgDEhgKEGtpbGxFbGl0TW9iY291bnQYDiABKAMSEQoJcXVp",
            "dENvdW50GA8gASgDEhIKCmJJc1Jldml2ZWQYECABKAgSHQoVc3RvcmVGcmVl",
            "UmVmcmVzaENvdW50GBEgASgDIvMBChRFbmRsZXNzTWFwQmF0dGxlRGF0YRIO",
            "CgZhcmVhSWQYASABKAMSEgoKcmFuZG9tU2VlZBgCIAEoAxIVCg1jdXJySGVy",
            "b0xldmVsGAMgASgDEhQKDGN1cnJFeHBDb3VudBgEIAEoAxIWCg5jdXJyRXF1",
            "aXBtZW50cxgFIAMoAxIUCgxjdXJyQWJpbGl0eXMYBiADKAMSEgoKZXh0cmFC",
            "dWZmcxgHIAMoAxIaChJraWxsTm9ybWFsTW9iQ291bnQYCCABKAMSGAoQa2ls",
            "bEVsaXRNb2Jjb3VudBgJIAEoAxISCgpiSXNSZXZpdmVkGAogASgIIjUKEkxp",
            "bWl0ZWRJdGVtR2V0SW5mbxIOCgZpdGVtSWQYASABKAMSDwoHZ2V0VGltZRgC",
            "IAEoAyI/ChJMaW1pdGVkSXRlbUdldERhdGESKQoIbGlzdEluZm8YASADKAsy",
            "Fy5Nc2cuTGltaXRlZEl0ZW1HZXRJbmZvInkKHUVuZGxlc3NNYXBMZWFkZXJi",
            "b2FyZEFyZWFJbmZvEg4KBmFyZWFJZBgBIAEoBRIWCg5hcmVhUmFuZG9tU2Vl",
            "ZBgCIAEoBRIVCg1wbGF5ZXJSYW5raW5nGAMgASgFEhkKEXBsYXllck1heEZy",
            "YWN0aW9uGAQgASgFIlUKGUVuZGxlc3NNYXBMZWFkZXJib2FyZERhdGESOAoM",
            "bGlzdEFyZWFJbmZvGAEgAygLMiIuTXNnLkVuZGxlc3NNYXBMZWFkZXJib2Fy",
            "ZEFyZWFJbmZvItkCCgtUYXNrTG9nSW5mbxIXCg9LaWxsTm9yTW9iQ291bnQY",
            "ASABKAMSGQoRS2lsbEVsaXRlTW9iQ291bnQYAiABKAMSGgoSTm9yVmVuZGlu",
            "Z0J1eUNvdW50GAMgASgDEhwKFE1hZ2ljVmVuZGluZ0J1eUNvdW50GAQgASgD",
            "EhYKDlBhc3NlZE1heExldmVsGAUgASgDEhQKDFBhc3NlZE1hcElkcxgGIAMo",
            "AxIbChNQYXNzZWRJbjIwTWluTWFwSWRzGAcgAygDEhcKD0hlcm9VcFN0YXJD",
            "b3VudBgIIAEoAxIXCg9PcGVuUGV0RWdnQ291bnQYCSABKAMSGQoRVGFsZW50",
            "VW5sb2NrQ291bnQYCiABKAMSFwoPR2V0UmV3YXJkVGFza0lkGAsgAygDEhoK",
            "EkdldFZpcFJld2FyZFRhc2tJZBgMIAMoAxIPCgdlbmRUaW1lGA0gASgDIokB",
            "CgtUYXNrTG9nRGF0YRImCgxEYWlseUxvZ0luZm8YASABKAsyEC5Nc2cuVGFz",
            "a0xvZ0luZm8SJwoNV2Vla2x5TG9nSW5mbxgCIAEoCzIQLk1zZy5UYXNrTG9n",
            "SW5mbxIpCg9BY2hpZXZlbWVudEluZm8YAyABKAsyEC5Nc2cuVGFza0xvZ0lu",
            "Zm8iNAoJR3VpZGVEYXRhEicKD2xpc3RGaW5pc2hHdWlkZRgBIAMoDjIOLk1z",
            "Zy5HdWlkZVR5cGUioAMKClBsYXllckRhdGESDgoGdXNlcklkGAEgASgDEhQK",
            "DHVzZXJEZXZpY2VJZBgCIAEoCRIjCgpub3JtYWxEYXRhGAMgASgLMg8uTXNn",
            "Lk5vcm1hbERhdGESIQoJZ3VpZGVEYXRhGAQgASgLMg4uTXNnLkd1aWRlRGF0",
            "YRIvChBsZXZlbE1hcFBhc3NEYXRhGAUgASgLMhUuTXNnLkxldmVsTWFwUGFz",
            "c0RhdGESMwoSbGV2ZWxNYXBCYXR0bGVEYXRhGAYgASgLMhcuTXNnLkxldmVs",
            "TWFwQmF0dGxlRGF0YRIfCghoYWxsRGF0YRgHIAEoCzINLk1zZy5IYWxsRGF0",
            "YRIzChJsaW1pdGVkSXRlbUdldERhdGEYCCABKAsyFy5Nc2cuTGltaXRlZEl0",
            "ZW1HZXREYXRhEiUKC3Rhc2tMb2dEYXRhGAkgASgLMhAuTXNnLlRhc2tMb2dE",
            "YXRhEkEKGWVuZGxlc3NNYXBMZWFkZXJib2FyZERhdGEYCiABKAsyHi5Nc2cu",
            "RW5kbGVzc01hcExlYWRlcmJvYXJkRGF0YSoeCglHdWlkZVR5cGUSCAoETm9u",
            "ZRAAEgcKA01heBALYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Msg.GuideType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UnlockedHeroInfo), global::Msg.UnlockedHeroInfo.Parser, new[]{ "HeroId", "HeroStar", "ListOwnedSkin" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.OwnedPetEggInfo), global::Msg.OwnedPetEggInfo.Parser, new[]{ "PetEggId", "PetEggCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.UnlockedPetInfo), global::Msg.UnlockedPetInfo.Parser, new[]{ "PetId", "PetLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.NormalData), global::Msg.NormalData.Parser, new[]{ "BlueCoinCount", "DiamondCount", "ListOwnedpetEggInfo", "IsNoAds", "ListUnlockTalent", "ListUnlockedHeroInfo", "ListUnlockedPetInfo", "CurrSelectPetId", "IsFinishGuide", "IsFinishGuide2", "DailyCheckInCount", "NextDailyCheckInTime", "AdRevivalHeroCount", "AdSettlementDoubleCount", "AdOpenedPetEgg1Count", "AdOpenedPetEgg2Count", "AdOpenedPetEgg3Count", "LastRefreshAdCountTime", "LastGetMonth1RewardTime", "LastGetMonth2RewardTime", "LastViewMonthCardTime", "LastViewLimitedTimeGiftPackTime", "LastViewLimitedTimeLevel", "RechargedAmount", "ContinuousFailureCount", "BPlayFirstLevelBattle", "NormalMonthCardStartTime", "SuperMonthCardStartTime", "GetedReservationRewards", "ResurrectionCoinCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.HallData), global::Msg.HallData.Parser, new[]{ "NorVendingNowStock", "NorVendingRestockTime", "NorVendingGoodItemCD", "EnchatVendingNowStock", "EnchantVendingRestockTime", "LastOpenHallTreasureTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LevelMapPassInfo), global::Msg.LevelMapPassInfo.Parser, new[]{ "MapId", "PassTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LevelMapPassData), global::Msg.LevelMapPassData.Parser, new[]{ "ListMapPassInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LevelMapBattleData), global::Msg.LevelMapBattleData.Parser, new[]{ "MapId", "RandomSeed", "CurrLevelNum", "CurrRoomType", "CurrHeroLevel", "CurrGoldCount", "CurrExpCount", "CurrEquipments", "CurrAbilitys", "ExtraBuffs", "BigTurntableTimes", "StoreRefreshCount", "KillNormalMobCount", "KillElitMobcount", "QuitCount", "BIsRevived", "StoreFreeRefreshCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.EndlessMapBattleData), global::Msg.EndlessMapBattleData.Parser, new[]{ "AreaId", "RandomSeed", "CurrHeroLevel", "CurrExpCount", "CurrEquipments", "CurrAbilitys", "ExtraBuffs", "KillNormalMobCount", "KillElitMobcount", "BIsRevived" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LimitedItemGetInfo), global::Msg.LimitedItemGetInfo.Parser, new[]{ "ItemId", "GetTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.LimitedItemGetData), global::Msg.LimitedItemGetData.Parser, new[]{ "ListInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.EndlessMapLeaderboardAreaInfo), global::Msg.EndlessMapLeaderboardAreaInfo.Parser, new[]{ "AreaId", "AreaRandomSeed", "PlayerRanking", "PlayerMaxFraction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.EndlessMapLeaderboardData), global::Msg.EndlessMapLeaderboardData.Parser, new[]{ "ListAreaInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.TaskLogInfo), global::Msg.TaskLogInfo.Parser, new[]{ "KillNorMobCount", "KillEliteMobCount", "NorVendingBuyCount", "MagicVendingBuyCount", "PassedMaxLevel", "PassedMapIds", "PassedIn20MinMapIds", "HeroUpStarCount", "OpenPetEggCount", "TalentUnlockCount", "GetRewardTaskId", "GetVipRewardTaskId", "EndTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.TaskLogData), global::Msg.TaskLogData.Parser, new[]{ "DailyLogInfo", "WeeklyLogInfo", "AchievementInfo" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.GuideData), global::Msg.GuideData.Parser, new[]{ "ListFinishGuide" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Msg.PlayerData), global::Msg.PlayerData.Parser, new[]{ "UserId", "UserDeviceId", "NormalData", "GuideData", "LevelMapPassData", "LevelMapBattleData", "HallData", "LimitedItemGetData", "TaskLogData", "EndlessMapLeaderboardData" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GuideType {
    [pbr::OriginalName("None")] None = 0,
    /// <summary>
    ///最大标记
    /// </summary>
    [pbr::OriginalName("Max")] Max = 11,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UnlockedHeroInfo : pb::IMessage<UnlockedHeroInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnlockedHeroInfo> _parser = new pb::MessageParser<UnlockedHeroInfo>(() => new UnlockedHeroInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnlockedHeroInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockedHeroInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockedHeroInfo(UnlockedHeroInfo other) : this() {
      heroId_ = other.heroId_;
      heroStar_ = other.heroStar_;
      listOwnedSkin_ = other.listOwnedSkin_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockedHeroInfo Clone() {
      return new UnlockedHeroInfo(this);
    }

    /// <summary>Field number for the "heroId" field.</summary>
    public const int HeroIdFieldNumber = 1;
    private long heroId_;
    /// <summary>
    ///英雄ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HeroId {
      get { return heroId_; }
      set {
        heroId_ = value;
      }
    }

    /// <summary>Field number for the "heroStar" field.</summary>
    public const int HeroStarFieldNumber = 2;
    private long heroStar_;
    /// <summary>
    ///英雄等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HeroStar {
      get { return heroStar_; }
      set {
        heroStar_ = value;
      }
    }

    /// <summary>Field number for the "listOwnedSkin" field.</summary>
    public const int ListOwnedSkinFieldNumber = 3;
    private static readonly pb::FieldCodec<long> _repeated_listOwnedSkin_codec
        = pb::FieldCodec.ForInt64(26);
    private readonly pbc::RepeatedField<long> listOwnedSkin_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///拥有的皮肤
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ListOwnedSkin {
      get { return listOwnedSkin_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnlockedHeroInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnlockedHeroInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HeroId != other.HeroId) return false;
      if (HeroStar != other.HeroStar) return false;
      if(!listOwnedSkin_.Equals(other.listOwnedSkin_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HeroId != 0L) hash ^= HeroId.GetHashCode();
      if (HeroStar != 0L) hash ^= HeroStar.GetHashCode();
      hash ^= listOwnedSkin_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HeroId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroId);
      }
      if (HeroStar != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeroStar);
      }
      listOwnedSkin_.WriteTo(output, _repeated_listOwnedSkin_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HeroId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(HeroId);
      }
      if (HeroStar != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(HeroStar);
      }
      listOwnedSkin_.WriteTo(ref output, _repeated_listOwnedSkin_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HeroId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroId);
      }
      if (HeroStar != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroStar);
      }
      size += listOwnedSkin_.CalculateSize(_repeated_listOwnedSkin_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnlockedHeroInfo other) {
      if (other == null) {
        return;
      }
      if (other.HeroId != 0L) {
        HeroId = other.HeroId;
      }
      if (other.HeroStar != 0L) {
        HeroStar = other.HeroStar;
      }
      listOwnedSkin_.Add(other.listOwnedSkin_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            HeroId = input.ReadInt64();
            break;
          }
          case 16: {
            HeroStar = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            listOwnedSkin_.AddEntriesFrom(input, _repeated_listOwnedSkin_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            HeroId = input.ReadInt64();
            break;
          }
          case 16: {
            HeroStar = input.ReadInt64();
            break;
          }
          case 26:
          case 24: {
            listOwnedSkin_.AddEntriesFrom(ref input, _repeated_listOwnedSkin_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OwnedPetEggInfo : pb::IMessage<OwnedPetEggInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OwnedPetEggInfo> _parser = new pb::MessageParser<OwnedPetEggInfo>(() => new OwnedPetEggInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OwnedPetEggInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedPetEggInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedPetEggInfo(OwnedPetEggInfo other) : this() {
      petEggId_ = other.petEggId_;
      petEggCount_ = other.petEggCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OwnedPetEggInfo Clone() {
      return new OwnedPetEggInfo(this);
    }

    /// <summary>Field number for the "petEggId" field.</summary>
    public const int PetEggIdFieldNumber = 1;
    private long petEggId_;
    /// <summary>
    ///宠物蛋类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PetEggId {
      get { return petEggId_; }
      set {
        petEggId_ = value;
      }
    }

    /// <summary>Field number for the "petEggCount" field.</summary>
    public const int PetEggCountFieldNumber = 2;
    private long petEggCount_;
    /// <summary>
    ///宠物蛋数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PetEggCount {
      get { return petEggCount_; }
      set {
        petEggCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OwnedPetEggInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OwnedPetEggInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PetEggId != other.PetEggId) return false;
      if (PetEggCount != other.PetEggCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PetEggId != 0L) hash ^= PetEggId.GetHashCode();
      if (PetEggCount != 0L) hash ^= PetEggCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PetEggId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PetEggId);
      }
      if (PetEggCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PetEggCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PetEggId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PetEggId);
      }
      if (PetEggCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PetEggCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PetEggId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PetEggId);
      }
      if (PetEggCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PetEggCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OwnedPetEggInfo other) {
      if (other == null) {
        return;
      }
      if (other.PetEggId != 0L) {
        PetEggId = other.PetEggId;
      }
      if (other.PetEggCount != 0L) {
        PetEggCount = other.PetEggCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PetEggId = input.ReadInt64();
            break;
          }
          case 16: {
            PetEggCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PetEggId = input.ReadInt64();
            break;
          }
          case 16: {
            PetEggCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class UnlockedPetInfo : pb::IMessage<UnlockedPetInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UnlockedPetInfo> _parser = new pb::MessageParser<UnlockedPetInfo>(() => new UnlockedPetInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<UnlockedPetInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockedPetInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockedPetInfo(UnlockedPetInfo other) : this() {
      petId_ = other.petId_;
      petLevel_ = other.petLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public UnlockedPetInfo Clone() {
      return new UnlockedPetInfo(this);
    }

    /// <summary>Field number for the "petId" field.</summary>
    public const int PetIdFieldNumber = 1;
    private long petId_;
    /// <summary>
    ///宠物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PetId {
      get { return petId_; }
      set {
        petId_ = value;
      }
    }

    /// <summary>Field number for the "petLevel" field.</summary>
    public const int PetLevelFieldNumber = 2;
    private long petLevel_;
    /// <summary>
    ///宠物等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PetLevel {
      get { return petLevel_; }
      set {
        petLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as UnlockedPetInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(UnlockedPetInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PetId != other.PetId) return false;
      if (PetLevel != other.PetLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PetId != 0L) hash ^= PetId.GetHashCode();
      if (PetLevel != 0L) hash ^= PetLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PetId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PetId);
      }
      if (PetLevel != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PetLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PetId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PetId);
      }
      if (PetLevel != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PetLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PetId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PetId);
      }
      if (PetLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PetLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(UnlockedPetInfo other) {
      if (other == null) {
        return;
      }
      if (other.PetId != 0L) {
        PetId = other.PetId;
      }
      if (other.PetLevel != 0L) {
        PetLevel = other.PetLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PetId = input.ReadInt64();
            break;
          }
          case 16: {
            PetLevel = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PetId = input.ReadInt64();
            break;
          }
          case 16: {
            PetLevel = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class NormalData : pb::IMessage<NormalData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<NormalData> _parser = new pb::MessageParser<NormalData>(() => new NormalData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<NormalData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NormalData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NormalData(NormalData other) : this() {
      blueCoinCount_ = other.blueCoinCount_;
      diamondCount_ = other.diamondCount_;
      listOwnedpetEggInfo_ = other.listOwnedpetEggInfo_.Clone();
      isNoAds_ = other.isNoAds_;
      listUnlockTalent_ = other.listUnlockTalent_.Clone();
      listUnlockedHeroInfo_ = other.listUnlockedHeroInfo_.Clone();
      listUnlockedPetInfo_ = other.listUnlockedPetInfo_.Clone();
      currSelectPetId_ = other.currSelectPetId_;
      isFinishGuide_ = other.isFinishGuide_;
      isFinishGuide2_ = other.isFinishGuide2_;
      dailyCheckInCount_ = other.dailyCheckInCount_;
      nextDailyCheckInTime_ = other.nextDailyCheckInTime_;
      adRevivalHeroCount_ = other.adRevivalHeroCount_;
      adSettlementDoubleCount_ = other.adSettlementDoubleCount_;
      adOpenedPetEgg1Count_ = other.adOpenedPetEgg1Count_;
      adOpenedPetEgg2Count_ = other.adOpenedPetEgg2Count_;
      adOpenedPetEgg3Count_ = other.adOpenedPetEgg3Count_;
      lastRefreshAdCountTime_ = other.lastRefreshAdCountTime_;
      lastGetMonth1RewardTime_ = other.lastGetMonth1RewardTime_;
      lastGetMonth2RewardTime_ = other.lastGetMonth2RewardTime_;
      lastViewMonthCardTime_ = other.lastViewMonthCardTime_;
      lastViewLimitedTimeGiftPackTime_ = other.lastViewLimitedTimeGiftPackTime_;
      lastViewLimitedTimeLevel_ = other.lastViewLimitedTimeLevel_;
      rechargedAmount_ = other.rechargedAmount_;
      continuousFailureCount_ = other.continuousFailureCount_;
      bPlayFirstLevelBattle_ = other.bPlayFirstLevelBattle_;
      normalMonthCardStartTime_ = other.normalMonthCardStartTime_;
      superMonthCardStartTime_ = other.superMonthCardStartTime_;
      getedReservationRewards_ = other.getedReservationRewards_;
      resurrectionCoinCount_ = other.resurrectionCoinCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public NormalData Clone() {
      return new NormalData(this);
    }

    /// <summary>Field number for the "blueCoinCount" field.</summary>
    public const int BlueCoinCountFieldNumber = 1;
    private long blueCoinCount_;
    /// <summary>
    ///蓝币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BlueCoinCount {
      get { return blueCoinCount_; }
      set {
        blueCoinCount_ = value;
      }
    }

    /// <summary>Field number for the "diamondCount" field.</summary>
    public const int DiamondCountFieldNumber = 2;
    private long diamondCount_;
    /// <summary>
    ///钻石数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DiamondCount {
      get { return diamondCount_; }
      set {
        diamondCount_ = value;
      }
    }

    /// <summary>Field number for the "listOwnedpetEggInfo" field.</summary>
    public const int ListOwnedpetEggInfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Msg.OwnedPetEggInfo> _repeated_listOwnedpetEggInfo_codec
        = pb::FieldCodec.ForMessage(26, global::Msg.OwnedPetEggInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.OwnedPetEggInfo> listOwnedpetEggInfo_ = new pbc::RepeatedField<global::Msg.OwnedPetEggInfo>();
    /// <summary>
    ///宠物蛋数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Msg.OwnedPetEggInfo> ListOwnedpetEggInfo {
      get { return listOwnedpetEggInfo_; }
    }

    /// <summary>Field number for the "isNoAds" field.</summary>
    public const int IsNoAdsFieldNumber = 4;
    private bool isNoAds_;
    /// <summary>
    ///是否免广告
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsNoAds {
      get { return isNoAds_; }
      set {
        isNoAds_ = value;
      }
    }

    /// <summary>Field number for the "listUnlockTalent" field.</summary>
    public const int ListUnlockTalentFieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_listUnlockTalent_codec
        = pb::FieldCodec.ForInt64(42);
    private readonly pbc::RepeatedField<long> listUnlockTalent_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///解锁的天赋
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ListUnlockTalent {
      get { return listUnlockTalent_; }
    }

    /// <summary>Field number for the "listUnlockedHeroInfo" field.</summary>
    public const int ListUnlockedHeroInfoFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Msg.UnlockedHeroInfo> _repeated_listUnlockedHeroInfo_codec
        = pb::FieldCodec.ForMessage(50, global::Msg.UnlockedHeroInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.UnlockedHeroInfo> listUnlockedHeroInfo_ = new pbc::RepeatedField<global::Msg.UnlockedHeroInfo>();
    /// <summary>
    ///已解锁的英雄信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Msg.UnlockedHeroInfo> ListUnlockedHeroInfo {
      get { return listUnlockedHeroInfo_; }
    }

    /// <summary>Field number for the "listUnlockedPetInfo" field.</summary>
    public const int ListUnlockedPetInfoFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Msg.UnlockedPetInfo> _repeated_listUnlockedPetInfo_codec
        = pb::FieldCodec.ForMessage(58, global::Msg.UnlockedPetInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.UnlockedPetInfo> listUnlockedPetInfo_ = new pbc::RepeatedField<global::Msg.UnlockedPetInfo>();
    /// <summary>
    ///已解锁的宠物信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Msg.UnlockedPetInfo> ListUnlockedPetInfo {
      get { return listUnlockedPetInfo_; }
    }

    /// <summary>Field number for the "currSelectPetId" field.</summary>
    public const int CurrSelectPetIdFieldNumber = 8;
    private long currSelectPetId_;
    /// <summary>
    ///选择的宠物ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrSelectPetId {
      get { return currSelectPetId_; }
      set {
        currSelectPetId_ = value;
      }
    }

    /// <summary>Field number for the "isFinishGuide" field.</summary>
    public const int IsFinishGuideFieldNumber = 9;
    private bool isFinishGuide_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinishGuide {
      get { return isFinishGuide_; }
      set {
        isFinishGuide_ = value;
      }
    }

    /// <summary>Field number for the "isFinishGuide2" field.</summary>
    public const int IsFinishGuide2FieldNumber = 10;
    private bool isFinishGuide2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsFinishGuide2 {
      get { return isFinishGuide2_; }
      set {
        isFinishGuide2_ = value;
      }
    }

    /// <summary>Field number for the "dailyCheckInCount" field.</summary>
    public const int DailyCheckInCountFieldNumber = 11;
    private long dailyCheckInCount_;
    /// <summary>
    ///每日签到天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long DailyCheckInCount {
      get { return dailyCheckInCount_; }
      set {
        dailyCheckInCount_ = value;
      }
    }

    /// <summary>Field number for the "nextDailyCheckInTime" field.</summary>
    public const int NextDailyCheckInTimeFieldNumber = 12;
    private long nextDailyCheckInTime_;
    /// <summary>
    ///下一次每日签到天数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NextDailyCheckInTime {
      get { return nextDailyCheckInTime_; }
      set {
        nextDailyCheckInTime_ = value;
      }
    }

    /// <summary>Field number for the "adRevivalHeroCount" field.</summary>
    public const int AdRevivalHeroCountFieldNumber = 13;
    private long adRevivalHeroCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AdRevivalHeroCount {
      get { return adRevivalHeroCount_; }
      set {
        adRevivalHeroCount_ = value;
      }
    }

    /// <summary>Field number for the "adSettlementDoubleCount" field.</summary>
    public const int AdSettlementDoubleCountFieldNumber = 14;
    private long adSettlementDoubleCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AdSettlementDoubleCount {
      get { return adSettlementDoubleCount_; }
      set {
        adSettlementDoubleCount_ = value;
      }
    }

    /// <summary>Field number for the "adOpenedPetEgg1Count" field.</summary>
    public const int AdOpenedPetEgg1CountFieldNumber = 15;
    private long adOpenedPetEgg1Count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AdOpenedPetEgg1Count {
      get { return adOpenedPetEgg1Count_; }
      set {
        adOpenedPetEgg1Count_ = value;
      }
    }

    /// <summary>Field number for the "adOpenedPetEgg2Count" field.</summary>
    public const int AdOpenedPetEgg2CountFieldNumber = 16;
    private long adOpenedPetEgg2Count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AdOpenedPetEgg2Count {
      get { return adOpenedPetEgg2Count_; }
      set {
        adOpenedPetEgg2Count_ = value;
      }
    }

    /// <summary>Field number for the "adOpenedPetEgg3Count" field.</summary>
    public const int AdOpenedPetEgg3CountFieldNumber = 17;
    private long adOpenedPetEgg3Count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AdOpenedPetEgg3Count {
      get { return adOpenedPetEgg3Count_; }
      set {
        adOpenedPetEgg3Count_ = value;
      }
    }

    /// <summary>Field number for the "lastRefreshAdCountTime" field.</summary>
    public const int LastRefreshAdCountTimeFieldNumber = 18;
    private long lastRefreshAdCountTime_;
    /// <summary>
    ///上一次刷新广告次数时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastRefreshAdCountTime {
      get { return lastRefreshAdCountTime_; }
      set {
        lastRefreshAdCountTime_ = value;
      }
    }

    /// <summary>Field number for the "lastGetMonth1RewardTime" field.</summary>
    public const int LastGetMonth1RewardTimeFieldNumber = 19;
    private long lastGetMonth1RewardTime_;
    /// <summary>
    ///上一次领取普通月卡奖励时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastGetMonth1RewardTime {
      get { return lastGetMonth1RewardTime_; }
      set {
        lastGetMonth1RewardTime_ = value;
      }
    }

    /// <summary>Field number for the "lastGetMonth2RewardTime" field.</summary>
    public const int LastGetMonth2RewardTimeFieldNumber = 20;
    private long lastGetMonth2RewardTime_;
    /// <summary>
    ///上一次领取高级月卡奖励时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastGetMonth2RewardTime {
      get { return lastGetMonth2RewardTime_; }
      set {
        lastGetMonth2RewardTime_ = value;
      }
    }

    /// <summary>Field number for the "lastViewMonthCardTime" field.</summary>
    public const int LastViewMonthCardTimeFieldNumber = 21;
    private long lastViewMonthCardTime_;
    /// <summary>
    ///上一次主动弹出月卡UI时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastViewMonthCardTime {
      get { return lastViewMonthCardTime_; }
      set {
        lastViewMonthCardTime_ = value;
      }
    }

    /// <summary>Field number for the "lastViewLimitedTimeGiftPackTime" field.</summary>
    public const int LastViewLimitedTimeGiftPackTimeFieldNumber = 22;
    private long lastViewLimitedTimeGiftPackTime_;
    /// <summary>
    ///上一次展示限时礼包时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastViewLimitedTimeGiftPackTime {
      get { return lastViewLimitedTimeGiftPackTime_; }
      set {
        lastViewLimitedTimeGiftPackTime_ = value;
      }
    }

    /// <summary>Field number for the "lastViewLimitedTimeLevel" field.</summary>
    public const int LastViewLimitedTimeLevelFieldNumber = 23;
    private long lastViewLimitedTimeLevel_;
    /// <summary>
    ///上一次展示的限时礼包等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastViewLimitedTimeLevel {
      get { return lastViewLimitedTimeLevel_; }
      set {
        lastViewLimitedTimeLevel_ = value;
      }
    }

    /// <summary>Field number for the "rechargedAmount" field.</summary>
    public const int RechargedAmountFieldNumber = 24;
    private float rechargedAmount_;
    /// <summary>
    ///已充值金额
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float RechargedAmount {
      get { return rechargedAmount_; }
      set {
        rechargedAmount_ = value;
      }
    }

    /// <summary>Field number for the "continuousFailureCount" field.</summary>
    public const int ContinuousFailureCountFieldNumber = 25;
    private long continuousFailureCount_;
    /// <summary>
    ///连续失败次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ContinuousFailureCount {
      get { return continuousFailureCount_; }
      set {
        continuousFailureCount_ = value;
      }
    }

    /// <summary>Field number for the "bPlayFirstLevelBattle" field.</summary>
    public const int BPlayFirstLevelBattleFieldNumber = 26;
    private bool bPlayFirstLevelBattle_;
    /// <summary>
    ///是否游玩了第一次战斗
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BPlayFirstLevelBattle {
      get { return bPlayFirstLevelBattle_; }
      set {
        bPlayFirstLevelBattle_ = value;
      }
    }

    /// <summary>Field number for the "normalMonthCardStartTime" field.</summary>
    public const int NormalMonthCardStartTimeFieldNumber = 27;
    private long normalMonthCardStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NormalMonthCardStartTime {
      get { return normalMonthCardStartTime_; }
      set {
        normalMonthCardStartTime_ = value;
      }
    }

    /// <summary>Field number for the "superMonthCardStartTime" field.</summary>
    public const int SuperMonthCardStartTimeFieldNumber = 28;
    private long superMonthCardStartTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long SuperMonthCardStartTime {
      get { return superMonthCardStartTime_; }
      set {
        superMonthCardStartTime_ = value;
      }
    }

    /// <summary>Field number for the "getedReservationRewards" field.</summary>
    public const int GetedReservationRewardsFieldNumber = 29;
    private bool getedReservationRewards_;
    /// <summary>
    ///是否已领取过了预约奖励
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool GetedReservationRewards {
      get { return getedReservationRewards_; }
      set {
        getedReservationRewards_ = value;
      }
    }

    /// <summary>Field number for the "resurrectionCoinCount" field.</summary>
    public const int ResurrectionCoinCountFieldNumber = 33;
    private long resurrectionCoinCount_;
    /// <summary>
    ///复活币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ResurrectionCoinCount {
      get { return resurrectionCoinCount_; }
      set {
        resurrectionCoinCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as NormalData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(NormalData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BlueCoinCount != other.BlueCoinCount) return false;
      if (DiamondCount != other.DiamondCount) return false;
      if(!listOwnedpetEggInfo_.Equals(other.listOwnedpetEggInfo_)) return false;
      if (IsNoAds != other.IsNoAds) return false;
      if(!listUnlockTalent_.Equals(other.listUnlockTalent_)) return false;
      if(!listUnlockedHeroInfo_.Equals(other.listUnlockedHeroInfo_)) return false;
      if(!listUnlockedPetInfo_.Equals(other.listUnlockedPetInfo_)) return false;
      if (CurrSelectPetId != other.CurrSelectPetId) return false;
      if (IsFinishGuide != other.IsFinishGuide) return false;
      if (IsFinishGuide2 != other.IsFinishGuide2) return false;
      if (DailyCheckInCount != other.DailyCheckInCount) return false;
      if (NextDailyCheckInTime != other.NextDailyCheckInTime) return false;
      if (AdRevivalHeroCount != other.AdRevivalHeroCount) return false;
      if (AdSettlementDoubleCount != other.AdSettlementDoubleCount) return false;
      if (AdOpenedPetEgg1Count != other.AdOpenedPetEgg1Count) return false;
      if (AdOpenedPetEgg2Count != other.AdOpenedPetEgg2Count) return false;
      if (AdOpenedPetEgg3Count != other.AdOpenedPetEgg3Count) return false;
      if (LastRefreshAdCountTime != other.LastRefreshAdCountTime) return false;
      if (LastGetMonth1RewardTime != other.LastGetMonth1RewardTime) return false;
      if (LastGetMonth2RewardTime != other.LastGetMonth2RewardTime) return false;
      if (LastViewMonthCardTime != other.LastViewMonthCardTime) return false;
      if (LastViewLimitedTimeGiftPackTime != other.LastViewLimitedTimeGiftPackTime) return false;
      if (LastViewLimitedTimeLevel != other.LastViewLimitedTimeLevel) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(RechargedAmount, other.RechargedAmount)) return false;
      if (ContinuousFailureCount != other.ContinuousFailureCount) return false;
      if (BPlayFirstLevelBattle != other.BPlayFirstLevelBattle) return false;
      if (NormalMonthCardStartTime != other.NormalMonthCardStartTime) return false;
      if (SuperMonthCardStartTime != other.SuperMonthCardStartTime) return false;
      if (GetedReservationRewards != other.GetedReservationRewards) return false;
      if (ResurrectionCoinCount != other.ResurrectionCoinCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BlueCoinCount != 0L) hash ^= BlueCoinCount.GetHashCode();
      if (DiamondCount != 0L) hash ^= DiamondCount.GetHashCode();
      hash ^= listOwnedpetEggInfo_.GetHashCode();
      if (IsNoAds != false) hash ^= IsNoAds.GetHashCode();
      hash ^= listUnlockTalent_.GetHashCode();
      hash ^= listUnlockedHeroInfo_.GetHashCode();
      hash ^= listUnlockedPetInfo_.GetHashCode();
      if (CurrSelectPetId != 0L) hash ^= CurrSelectPetId.GetHashCode();
      if (IsFinishGuide != false) hash ^= IsFinishGuide.GetHashCode();
      if (IsFinishGuide2 != false) hash ^= IsFinishGuide2.GetHashCode();
      if (DailyCheckInCount != 0L) hash ^= DailyCheckInCount.GetHashCode();
      if (NextDailyCheckInTime != 0L) hash ^= NextDailyCheckInTime.GetHashCode();
      if (AdRevivalHeroCount != 0L) hash ^= AdRevivalHeroCount.GetHashCode();
      if (AdSettlementDoubleCount != 0L) hash ^= AdSettlementDoubleCount.GetHashCode();
      if (AdOpenedPetEgg1Count != 0L) hash ^= AdOpenedPetEgg1Count.GetHashCode();
      if (AdOpenedPetEgg2Count != 0L) hash ^= AdOpenedPetEgg2Count.GetHashCode();
      if (AdOpenedPetEgg3Count != 0L) hash ^= AdOpenedPetEgg3Count.GetHashCode();
      if (LastRefreshAdCountTime != 0L) hash ^= LastRefreshAdCountTime.GetHashCode();
      if (LastGetMonth1RewardTime != 0L) hash ^= LastGetMonth1RewardTime.GetHashCode();
      if (LastGetMonth2RewardTime != 0L) hash ^= LastGetMonth2RewardTime.GetHashCode();
      if (LastViewMonthCardTime != 0L) hash ^= LastViewMonthCardTime.GetHashCode();
      if (LastViewLimitedTimeGiftPackTime != 0L) hash ^= LastViewLimitedTimeGiftPackTime.GetHashCode();
      if (LastViewLimitedTimeLevel != 0L) hash ^= LastViewLimitedTimeLevel.GetHashCode();
      if (RechargedAmount != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(RechargedAmount);
      if (ContinuousFailureCount != 0L) hash ^= ContinuousFailureCount.GetHashCode();
      if (BPlayFirstLevelBattle != false) hash ^= BPlayFirstLevelBattle.GetHashCode();
      if (NormalMonthCardStartTime != 0L) hash ^= NormalMonthCardStartTime.GetHashCode();
      if (SuperMonthCardStartTime != 0L) hash ^= SuperMonthCardStartTime.GetHashCode();
      if (GetedReservationRewards != false) hash ^= GetedReservationRewards.GetHashCode();
      if (ResurrectionCoinCount != 0L) hash ^= ResurrectionCoinCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BlueCoinCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BlueCoinCount);
      }
      if (DiamondCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DiamondCount);
      }
      listOwnedpetEggInfo_.WriteTo(output, _repeated_listOwnedpetEggInfo_codec);
      if (IsNoAds != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsNoAds);
      }
      listUnlockTalent_.WriteTo(output, _repeated_listUnlockTalent_codec);
      listUnlockedHeroInfo_.WriteTo(output, _repeated_listUnlockedHeroInfo_codec);
      listUnlockedPetInfo_.WriteTo(output, _repeated_listUnlockedPetInfo_codec);
      if (CurrSelectPetId != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CurrSelectPetId);
      }
      if (IsFinishGuide != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFinishGuide);
      }
      if (IsFinishGuide2 != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsFinishGuide2);
      }
      if (DailyCheckInCount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(DailyCheckInCount);
      }
      if (NextDailyCheckInTime != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(NextDailyCheckInTime);
      }
      if (AdRevivalHeroCount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(AdRevivalHeroCount);
      }
      if (AdSettlementDoubleCount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(AdSettlementDoubleCount);
      }
      if (AdOpenedPetEgg1Count != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(AdOpenedPetEgg1Count);
      }
      if (AdOpenedPetEgg2Count != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(AdOpenedPetEgg2Count);
      }
      if (AdOpenedPetEgg3Count != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(AdOpenedPetEgg3Count);
      }
      if (LastRefreshAdCountTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(LastRefreshAdCountTime);
      }
      if (LastGetMonth1RewardTime != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(LastGetMonth1RewardTime);
      }
      if (LastGetMonth2RewardTime != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(LastGetMonth2RewardTime);
      }
      if (LastViewMonthCardTime != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(LastViewMonthCardTime);
      }
      if (LastViewLimitedTimeGiftPackTime != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(LastViewLimitedTimeGiftPackTime);
      }
      if (LastViewLimitedTimeLevel != 0L) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(LastViewLimitedTimeLevel);
      }
      if (RechargedAmount != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(RechargedAmount);
      }
      if (ContinuousFailureCount != 0L) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(ContinuousFailureCount);
      }
      if (BPlayFirstLevelBattle != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(BPlayFirstLevelBattle);
      }
      if (NormalMonthCardStartTime != 0L) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(NormalMonthCardStartTime);
      }
      if (SuperMonthCardStartTime != 0L) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(SuperMonthCardStartTime);
      }
      if (GetedReservationRewards != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(GetedReservationRewards);
      }
      if (ResurrectionCoinCount != 0L) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(ResurrectionCoinCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BlueCoinCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(BlueCoinCount);
      }
      if (DiamondCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DiamondCount);
      }
      listOwnedpetEggInfo_.WriteTo(ref output, _repeated_listOwnedpetEggInfo_codec);
      if (IsNoAds != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsNoAds);
      }
      listUnlockTalent_.WriteTo(ref output, _repeated_listUnlockTalent_codec);
      listUnlockedHeroInfo_.WriteTo(ref output, _repeated_listUnlockedHeroInfo_codec);
      listUnlockedPetInfo_.WriteTo(ref output, _repeated_listUnlockedPetInfo_codec);
      if (CurrSelectPetId != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(CurrSelectPetId);
      }
      if (IsFinishGuide != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsFinishGuide);
      }
      if (IsFinishGuide2 != false) {
        output.WriteRawTag(80);
        output.WriteBool(IsFinishGuide2);
      }
      if (DailyCheckInCount != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(DailyCheckInCount);
      }
      if (NextDailyCheckInTime != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(NextDailyCheckInTime);
      }
      if (AdRevivalHeroCount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(AdRevivalHeroCount);
      }
      if (AdSettlementDoubleCount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(AdSettlementDoubleCount);
      }
      if (AdOpenedPetEgg1Count != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(AdOpenedPetEgg1Count);
      }
      if (AdOpenedPetEgg2Count != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(AdOpenedPetEgg2Count);
      }
      if (AdOpenedPetEgg3Count != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(AdOpenedPetEgg3Count);
      }
      if (LastRefreshAdCountTime != 0L) {
        output.WriteRawTag(144, 1);
        output.WriteInt64(LastRefreshAdCountTime);
      }
      if (LastGetMonth1RewardTime != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(LastGetMonth1RewardTime);
      }
      if (LastGetMonth2RewardTime != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(LastGetMonth2RewardTime);
      }
      if (LastViewMonthCardTime != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(LastViewMonthCardTime);
      }
      if (LastViewLimitedTimeGiftPackTime != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(LastViewLimitedTimeGiftPackTime);
      }
      if (LastViewLimitedTimeLevel != 0L) {
        output.WriteRawTag(184, 1);
        output.WriteInt64(LastViewLimitedTimeLevel);
      }
      if (RechargedAmount != 0F) {
        output.WriteRawTag(197, 1);
        output.WriteFloat(RechargedAmount);
      }
      if (ContinuousFailureCount != 0L) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(ContinuousFailureCount);
      }
      if (BPlayFirstLevelBattle != false) {
        output.WriteRawTag(208, 1);
        output.WriteBool(BPlayFirstLevelBattle);
      }
      if (NormalMonthCardStartTime != 0L) {
        output.WriteRawTag(216, 1);
        output.WriteInt64(NormalMonthCardStartTime);
      }
      if (SuperMonthCardStartTime != 0L) {
        output.WriteRawTag(224, 1);
        output.WriteInt64(SuperMonthCardStartTime);
      }
      if (GetedReservationRewards != false) {
        output.WriteRawTag(232, 1);
        output.WriteBool(GetedReservationRewards);
      }
      if (ResurrectionCoinCount != 0L) {
        output.WriteRawTag(136, 2);
        output.WriteInt64(ResurrectionCoinCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BlueCoinCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlueCoinCount);
      }
      if (DiamondCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiamondCount);
      }
      size += listOwnedpetEggInfo_.CalculateSize(_repeated_listOwnedpetEggInfo_codec);
      if (IsNoAds != false) {
        size += 1 + 1;
      }
      size += listUnlockTalent_.CalculateSize(_repeated_listUnlockTalent_codec);
      size += listUnlockedHeroInfo_.CalculateSize(_repeated_listUnlockedHeroInfo_codec);
      size += listUnlockedPetInfo_.CalculateSize(_repeated_listUnlockedPetInfo_codec);
      if (CurrSelectPetId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrSelectPetId);
      }
      if (IsFinishGuide != false) {
        size += 1 + 1;
      }
      if (IsFinishGuide2 != false) {
        size += 1 + 1;
      }
      if (DailyCheckInCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DailyCheckInCount);
      }
      if (NextDailyCheckInTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NextDailyCheckInTime);
      }
      if (AdRevivalHeroCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AdRevivalHeroCount);
      }
      if (AdSettlementDoubleCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AdSettlementDoubleCount);
      }
      if (AdOpenedPetEgg1Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AdOpenedPetEgg1Count);
      }
      if (AdOpenedPetEgg2Count != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AdOpenedPetEgg2Count);
      }
      if (AdOpenedPetEgg3Count != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(AdOpenedPetEgg3Count);
      }
      if (LastRefreshAdCountTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastRefreshAdCountTime);
      }
      if (LastGetMonth1RewardTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastGetMonth1RewardTime);
      }
      if (LastGetMonth2RewardTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastGetMonth2RewardTime);
      }
      if (LastViewMonthCardTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastViewMonthCardTime);
      }
      if (LastViewLimitedTimeGiftPackTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastViewLimitedTimeGiftPackTime);
      }
      if (LastViewLimitedTimeLevel != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LastViewLimitedTimeLevel);
      }
      if (RechargedAmount != 0F) {
        size += 2 + 4;
      }
      if (ContinuousFailureCount != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ContinuousFailureCount);
      }
      if (BPlayFirstLevelBattle != false) {
        size += 2 + 1;
      }
      if (NormalMonthCardStartTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(NormalMonthCardStartTime);
      }
      if (SuperMonthCardStartTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(SuperMonthCardStartTime);
      }
      if (GetedReservationRewards != false) {
        size += 2 + 1;
      }
      if (ResurrectionCoinCount != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(ResurrectionCoinCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(NormalData other) {
      if (other == null) {
        return;
      }
      if (other.BlueCoinCount != 0L) {
        BlueCoinCount = other.BlueCoinCount;
      }
      if (other.DiamondCount != 0L) {
        DiamondCount = other.DiamondCount;
      }
      listOwnedpetEggInfo_.Add(other.listOwnedpetEggInfo_);
      if (other.IsNoAds != false) {
        IsNoAds = other.IsNoAds;
      }
      listUnlockTalent_.Add(other.listUnlockTalent_);
      listUnlockedHeroInfo_.Add(other.listUnlockedHeroInfo_);
      listUnlockedPetInfo_.Add(other.listUnlockedPetInfo_);
      if (other.CurrSelectPetId != 0L) {
        CurrSelectPetId = other.CurrSelectPetId;
      }
      if (other.IsFinishGuide != false) {
        IsFinishGuide = other.IsFinishGuide;
      }
      if (other.IsFinishGuide2 != false) {
        IsFinishGuide2 = other.IsFinishGuide2;
      }
      if (other.DailyCheckInCount != 0L) {
        DailyCheckInCount = other.DailyCheckInCount;
      }
      if (other.NextDailyCheckInTime != 0L) {
        NextDailyCheckInTime = other.NextDailyCheckInTime;
      }
      if (other.AdRevivalHeroCount != 0L) {
        AdRevivalHeroCount = other.AdRevivalHeroCount;
      }
      if (other.AdSettlementDoubleCount != 0L) {
        AdSettlementDoubleCount = other.AdSettlementDoubleCount;
      }
      if (other.AdOpenedPetEgg1Count != 0L) {
        AdOpenedPetEgg1Count = other.AdOpenedPetEgg1Count;
      }
      if (other.AdOpenedPetEgg2Count != 0L) {
        AdOpenedPetEgg2Count = other.AdOpenedPetEgg2Count;
      }
      if (other.AdOpenedPetEgg3Count != 0L) {
        AdOpenedPetEgg3Count = other.AdOpenedPetEgg3Count;
      }
      if (other.LastRefreshAdCountTime != 0L) {
        LastRefreshAdCountTime = other.LastRefreshAdCountTime;
      }
      if (other.LastGetMonth1RewardTime != 0L) {
        LastGetMonth1RewardTime = other.LastGetMonth1RewardTime;
      }
      if (other.LastGetMonth2RewardTime != 0L) {
        LastGetMonth2RewardTime = other.LastGetMonth2RewardTime;
      }
      if (other.LastViewMonthCardTime != 0L) {
        LastViewMonthCardTime = other.LastViewMonthCardTime;
      }
      if (other.LastViewLimitedTimeGiftPackTime != 0L) {
        LastViewLimitedTimeGiftPackTime = other.LastViewLimitedTimeGiftPackTime;
      }
      if (other.LastViewLimitedTimeLevel != 0L) {
        LastViewLimitedTimeLevel = other.LastViewLimitedTimeLevel;
      }
      if (other.RechargedAmount != 0F) {
        RechargedAmount = other.RechargedAmount;
      }
      if (other.ContinuousFailureCount != 0L) {
        ContinuousFailureCount = other.ContinuousFailureCount;
      }
      if (other.BPlayFirstLevelBattle != false) {
        BPlayFirstLevelBattle = other.BPlayFirstLevelBattle;
      }
      if (other.NormalMonthCardStartTime != 0L) {
        NormalMonthCardStartTime = other.NormalMonthCardStartTime;
      }
      if (other.SuperMonthCardStartTime != 0L) {
        SuperMonthCardStartTime = other.SuperMonthCardStartTime;
      }
      if (other.GetedReservationRewards != false) {
        GetedReservationRewards = other.GetedReservationRewards;
      }
      if (other.ResurrectionCoinCount != 0L) {
        ResurrectionCoinCount = other.ResurrectionCoinCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BlueCoinCount = input.ReadInt64();
            break;
          }
          case 16: {
            DiamondCount = input.ReadInt64();
            break;
          }
          case 26: {
            listOwnedpetEggInfo_.AddEntriesFrom(input, _repeated_listOwnedpetEggInfo_codec);
            break;
          }
          case 32: {
            IsNoAds = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            listUnlockTalent_.AddEntriesFrom(input, _repeated_listUnlockTalent_codec);
            break;
          }
          case 50: {
            listUnlockedHeroInfo_.AddEntriesFrom(input, _repeated_listUnlockedHeroInfo_codec);
            break;
          }
          case 58: {
            listUnlockedPetInfo_.AddEntriesFrom(input, _repeated_listUnlockedPetInfo_codec);
            break;
          }
          case 64: {
            CurrSelectPetId = input.ReadInt64();
            break;
          }
          case 72: {
            IsFinishGuide = input.ReadBool();
            break;
          }
          case 80: {
            IsFinishGuide2 = input.ReadBool();
            break;
          }
          case 88: {
            DailyCheckInCount = input.ReadInt64();
            break;
          }
          case 96: {
            NextDailyCheckInTime = input.ReadInt64();
            break;
          }
          case 104: {
            AdRevivalHeroCount = input.ReadInt64();
            break;
          }
          case 112: {
            AdSettlementDoubleCount = input.ReadInt64();
            break;
          }
          case 120: {
            AdOpenedPetEgg1Count = input.ReadInt64();
            break;
          }
          case 128: {
            AdOpenedPetEgg2Count = input.ReadInt64();
            break;
          }
          case 136: {
            AdOpenedPetEgg3Count = input.ReadInt64();
            break;
          }
          case 144: {
            LastRefreshAdCountTime = input.ReadInt64();
            break;
          }
          case 152: {
            LastGetMonth1RewardTime = input.ReadInt64();
            break;
          }
          case 160: {
            LastGetMonth2RewardTime = input.ReadInt64();
            break;
          }
          case 168: {
            LastViewMonthCardTime = input.ReadInt64();
            break;
          }
          case 176: {
            LastViewLimitedTimeGiftPackTime = input.ReadInt64();
            break;
          }
          case 184: {
            LastViewLimitedTimeLevel = input.ReadInt64();
            break;
          }
          case 197: {
            RechargedAmount = input.ReadFloat();
            break;
          }
          case 200: {
            ContinuousFailureCount = input.ReadInt64();
            break;
          }
          case 208: {
            BPlayFirstLevelBattle = input.ReadBool();
            break;
          }
          case 216: {
            NormalMonthCardStartTime = input.ReadInt64();
            break;
          }
          case 224: {
            SuperMonthCardStartTime = input.ReadInt64();
            break;
          }
          case 232: {
            GetedReservationRewards = input.ReadBool();
            break;
          }
          case 264: {
            ResurrectionCoinCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BlueCoinCount = input.ReadInt64();
            break;
          }
          case 16: {
            DiamondCount = input.ReadInt64();
            break;
          }
          case 26: {
            listOwnedpetEggInfo_.AddEntriesFrom(ref input, _repeated_listOwnedpetEggInfo_codec);
            break;
          }
          case 32: {
            IsNoAds = input.ReadBool();
            break;
          }
          case 42:
          case 40: {
            listUnlockTalent_.AddEntriesFrom(ref input, _repeated_listUnlockTalent_codec);
            break;
          }
          case 50: {
            listUnlockedHeroInfo_.AddEntriesFrom(ref input, _repeated_listUnlockedHeroInfo_codec);
            break;
          }
          case 58: {
            listUnlockedPetInfo_.AddEntriesFrom(ref input, _repeated_listUnlockedPetInfo_codec);
            break;
          }
          case 64: {
            CurrSelectPetId = input.ReadInt64();
            break;
          }
          case 72: {
            IsFinishGuide = input.ReadBool();
            break;
          }
          case 80: {
            IsFinishGuide2 = input.ReadBool();
            break;
          }
          case 88: {
            DailyCheckInCount = input.ReadInt64();
            break;
          }
          case 96: {
            NextDailyCheckInTime = input.ReadInt64();
            break;
          }
          case 104: {
            AdRevivalHeroCount = input.ReadInt64();
            break;
          }
          case 112: {
            AdSettlementDoubleCount = input.ReadInt64();
            break;
          }
          case 120: {
            AdOpenedPetEgg1Count = input.ReadInt64();
            break;
          }
          case 128: {
            AdOpenedPetEgg2Count = input.ReadInt64();
            break;
          }
          case 136: {
            AdOpenedPetEgg3Count = input.ReadInt64();
            break;
          }
          case 144: {
            LastRefreshAdCountTime = input.ReadInt64();
            break;
          }
          case 152: {
            LastGetMonth1RewardTime = input.ReadInt64();
            break;
          }
          case 160: {
            LastGetMonth2RewardTime = input.ReadInt64();
            break;
          }
          case 168: {
            LastViewMonthCardTime = input.ReadInt64();
            break;
          }
          case 176: {
            LastViewLimitedTimeGiftPackTime = input.ReadInt64();
            break;
          }
          case 184: {
            LastViewLimitedTimeLevel = input.ReadInt64();
            break;
          }
          case 197: {
            RechargedAmount = input.ReadFloat();
            break;
          }
          case 200: {
            ContinuousFailureCount = input.ReadInt64();
            break;
          }
          case 208: {
            BPlayFirstLevelBattle = input.ReadBool();
            break;
          }
          case 216: {
            NormalMonthCardStartTime = input.ReadInt64();
            break;
          }
          case 224: {
            SuperMonthCardStartTime = input.ReadInt64();
            break;
          }
          case 232: {
            GetedReservationRewards = input.ReadBool();
            break;
          }
          case 264: {
            ResurrectionCoinCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HallData : pb::IMessage<HallData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HallData> _parser = new pb::MessageParser<HallData>(() => new HallData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HallData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HallData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HallData(HallData other) : this() {
      norVendingNowStock_ = other.norVendingNowStock_;
      norVendingRestockTime_ = other.norVendingRestockTime_;
      norVendingGoodItemCD_ = other.norVendingGoodItemCD_;
      enchatVendingNowStock_ = other.enchatVendingNowStock_;
      enchantVendingRestockTime_ = other.enchantVendingRestockTime_;
      lastOpenHallTreasureTime_ = other.lastOpenHallTreasureTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HallData Clone() {
      return new HallData(this);
    }

    /// <summary>Field number for the "norVendingNowStock" field.</summary>
    public const int NorVendingNowStockFieldNumber = 1;
    private long norVendingNowStock_;
    /// <summary>
    ///普通售卖机当前库存
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NorVendingNowStock {
      get { return norVendingNowStock_; }
      set {
        norVendingNowStock_ = value;
      }
    }

    /// <summary>Field number for the "norVendingRestockTime" field.</summary>
    public const int NorVendingRestockTimeFieldNumber = 2;
    private long norVendingRestockTime_;
    /// <summary>
    ///普通售卖机补货时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NorVendingRestockTime {
      get { return norVendingRestockTime_; }
      set {
        norVendingRestockTime_ = value;
      }
    }

    /// <summary>Field number for the "norVendingGoodItemCD" field.</summary>
    public const int NorVendingGoodItemCDFieldNumber = 3;
    private long norVendingGoodItemCD_;
    /// <summary>
    ///普通售卖机好东西CD
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NorVendingGoodItemCD {
      get { return norVendingGoodItemCD_; }
      set {
        norVendingGoodItemCD_ = value;
      }
    }

    /// <summary>Field number for the "enchatVendingNowStock" field.</summary>
    public const int EnchatVendingNowStockFieldNumber = 4;
    private long enchatVendingNowStock_;
    /// <summary>
    ///附魔售卖机当前库存
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EnchatVendingNowStock {
      get { return enchatVendingNowStock_; }
      set {
        enchatVendingNowStock_ = value;
      }
    }

    /// <summary>Field number for the "enchantVendingRestockTime" field.</summary>
    public const int EnchantVendingRestockTimeFieldNumber = 5;
    private long enchantVendingRestockTime_;
    /// <summary>
    ///附魔售卖机补货时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EnchantVendingRestockTime {
      get { return enchantVendingRestockTime_; }
      set {
        enchantVendingRestockTime_ = value;
      }
    }

    /// <summary>Field number for the "lastOpenHallTreasureTime" field.</summary>
    public const int LastOpenHallTreasureTimeFieldNumber = 6;
    private long lastOpenHallTreasureTime_;
    /// <summary>
    ///上一次开启大厅宝箱时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long LastOpenHallTreasureTime {
      get { return lastOpenHallTreasureTime_; }
      set {
        lastOpenHallTreasureTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HallData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HallData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NorVendingNowStock != other.NorVendingNowStock) return false;
      if (NorVendingRestockTime != other.NorVendingRestockTime) return false;
      if (NorVendingGoodItemCD != other.NorVendingGoodItemCD) return false;
      if (EnchatVendingNowStock != other.EnchatVendingNowStock) return false;
      if (EnchantVendingRestockTime != other.EnchantVendingRestockTime) return false;
      if (LastOpenHallTreasureTime != other.LastOpenHallTreasureTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (NorVendingNowStock != 0L) hash ^= NorVendingNowStock.GetHashCode();
      if (NorVendingRestockTime != 0L) hash ^= NorVendingRestockTime.GetHashCode();
      if (NorVendingGoodItemCD != 0L) hash ^= NorVendingGoodItemCD.GetHashCode();
      if (EnchatVendingNowStock != 0L) hash ^= EnchatVendingNowStock.GetHashCode();
      if (EnchantVendingRestockTime != 0L) hash ^= EnchantVendingRestockTime.GetHashCode();
      if (LastOpenHallTreasureTime != 0L) hash ^= LastOpenHallTreasureTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NorVendingNowStock != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(NorVendingNowStock);
      }
      if (NorVendingRestockTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NorVendingRestockTime);
      }
      if (NorVendingGoodItemCD != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NorVendingGoodItemCD);
      }
      if (EnchatVendingNowStock != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EnchatVendingNowStock);
      }
      if (EnchantVendingRestockTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EnchantVendingRestockTime);
      }
      if (LastOpenHallTreasureTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LastOpenHallTreasureTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NorVendingNowStock != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(NorVendingNowStock);
      }
      if (NorVendingRestockTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(NorVendingRestockTime);
      }
      if (NorVendingGoodItemCD != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NorVendingGoodItemCD);
      }
      if (EnchatVendingNowStock != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(EnchatVendingNowStock);
      }
      if (EnchantVendingRestockTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(EnchantVendingRestockTime);
      }
      if (LastOpenHallTreasureTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(LastOpenHallTreasureTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (NorVendingNowStock != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NorVendingNowStock);
      }
      if (NorVendingRestockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NorVendingRestockTime);
      }
      if (NorVendingGoodItemCD != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NorVendingGoodItemCD);
      }
      if (EnchatVendingNowStock != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnchatVendingNowStock);
      }
      if (EnchantVendingRestockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EnchantVendingRestockTime);
      }
      if (LastOpenHallTreasureTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastOpenHallTreasureTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HallData other) {
      if (other == null) {
        return;
      }
      if (other.NorVendingNowStock != 0L) {
        NorVendingNowStock = other.NorVendingNowStock;
      }
      if (other.NorVendingRestockTime != 0L) {
        NorVendingRestockTime = other.NorVendingRestockTime;
      }
      if (other.NorVendingGoodItemCD != 0L) {
        NorVendingGoodItemCD = other.NorVendingGoodItemCD;
      }
      if (other.EnchatVendingNowStock != 0L) {
        EnchatVendingNowStock = other.EnchatVendingNowStock;
      }
      if (other.EnchantVendingRestockTime != 0L) {
        EnchantVendingRestockTime = other.EnchantVendingRestockTime;
      }
      if (other.LastOpenHallTreasureTime != 0L) {
        LastOpenHallTreasureTime = other.LastOpenHallTreasureTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NorVendingNowStock = input.ReadInt64();
            break;
          }
          case 16: {
            NorVendingRestockTime = input.ReadInt64();
            break;
          }
          case 24: {
            NorVendingGoodItemCD = input.ReadInt64();
            break;
          }
          case 32: {
            EnchatVendingNowStock = input.ReadInt64();
            break;
          }
          case 40: {
            EnchantVendingRestockTime = input.ReadInt64();
            break;
          }
          case 48: {
            LastOpenHallTreasureTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            NorVendingNowStock = input.ReadInt64();
            break;
          }
          case 16: {
            NorVendingRestockTime = input.ReadInt64();
            break;
          }
          case 24: {
            NorVendingGoodItemCD = input.ReadInt64();
            break;
          }
          case 32: {
            EnchatVendingNowStock = input.ReadInt64();
            break;
          }
          case 40: {
            EnchantVendingRestockTime = input.ReadInt64();
            break;
          }
          case 48: {
            LastOpenHallTreasureTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LevelMapPassInfo : pb::IMessage<LevelMapPassInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelMapPassInfo> _parser = new pb::MessageParser<LevelMapPassInfo>(() => new LevelMapPassInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LevelMapPassInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapPassInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapPassInfo(LevelMapPassInfo other) : this() {
      mapId_ = other.mapId_;
      passTime_ = other.passTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapPassInfo Clone() {
      return new LevelMapPassInfo(this);
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private long mapId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "passTime" field.</summary>
    public const int PassTimeFieldNumber = 2;
    private long passTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PassTime {
      get { return passTime_; }
      set {
        passTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LevelMapPassInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LevelMapPassInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (PassTime != other.PassTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0L) hash ^= MapId.GetHashCode();
      if (PassTime != 0L) hash ^= PassTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MapId);
      }
      if (PassTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PassTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MapId);
      }
      if (PassTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PassTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MapId);
      }
      if (PassTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PassTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LevelMapPassInfo other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0L) {
        MapId = other.MapId;
      }
      if (other.PassTime != 0L) {
        PassTime = other.PassTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt64();
            break;
          }
          case 16: {
            PassTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadInt64();
            break;
          }
          case 16: {
            PassTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LevelMapPassData : pb::IMessage<LevelMapPassData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelMapPassData> _parser = new pb::MessageParser<LevelMapPassData>(() => new LevelMapPassData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LevelMapPassData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapPassData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapPassData(LevelMapPassData other) : this() {
      listMapPassInfo_ = other.listMapPassInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapPassData Clone() {
      return new LevelMapPassData(this);
    }

    /// <summary>Field number for the "listMapPassInfo" field.</summary>
    public const int ListMapPassInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.LevelMapPassInfo> _repeated_listMapPassInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.LevelMapPassInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.LevelMapPassInfo> listMapPassInfo_ = new pbc::RepeatedField<global::Msg.LevelMapPassInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Msg.LevelMapPassInfo> ListMapPassInfo {
      get { return listMapPassInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LevelMapPassData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LevelMapPassData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listMapPassInfo_.Equals(other.listMapPassInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listMapPassInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listMapPassInfo_.WriteTo(output, _repeated_listMapPassInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listMapPassInfo_.WriteTo(ref output, _repeated_listMapPassInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += listMapPassInfo_.CalculateSize(_repeated_listMapPassInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LevelMapPassData other) {
      if (other == null) {
        return;
      }
      listMapPassInfo_.Add(other.listMapPassInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listMapPassInfo_.AddEntriesFrom(input, _repeated_listMapPassInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            listMapPassInfo_.AddEntriesFrom(ref input, _repeated_listMapPassInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LevelMapBattleData : pb::IMessage<LevelMapBattleData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LevelMapBattleData> _parser = new pb::MessageParser<LevelMapBattleData>(() => new LevelMapBattleData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LevelMapBattleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapBattleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapBattleData(LevelMapBattleData other) : this() {
      mapId_ = other.mapId_;
      randomSeed_ = other.randomSeed_;
      currLevelNum_ = other.currLevelNum_;
      currRoomType_ = other.currRoomType_;
      currHeroLevel_ = other.currHeroLevel_;
      currGoldCount_ = other.currGoldCount_;
      currExpCount_ = other.currExpCount_;
      currEquipments_ = other.currEquipments_.Clone();
      currAbilitys_ = other.currAbilitys_.Clone();
      extraBuffs_ = other.extraBuffs_.Clone();
      bigTurntableTimes_ = other.bigTurntableTimes_;
      storeRefreshCount_ = other.storeRefreshCount_;
      killNormalMobCount_ = other.killNormalMobCount_;
      killElitMobcount_ = other.killElitMobcount_;
      quitCount_ = other.quitCount_;
      bIsRevived_ = other.bIsRevived_;
      storeFreeRefreshCount_ = other.storeFreeRefreshCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LevelMapBattleData Clone() {
      return new LevelMapBattleData(this);
    }

    /// <summary>Field number for the "mapId" field.</summary>
    public const int MapIdFieldNumber = 1;
    private long mapId_;
    /// <summary>
    ///地图id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MapId {
      get { return mapId_; }
      set {
        mapId_ = value;
      }
    }

    /// <summary>Field number for the "randomSeed" field.</summary>
    public const int RandomSeedFieldNumber = 2;
    private long randomSeed_;
    /// <summary>
    ///随机种子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RandomSeed {
      get { return randomSeed_; }
      set {
        randomSeed_ = value;
      }
    }

    /// <summary>Field number for the "currLevelNum" field.</summary>
    public const int CurrLevelNumFieldNumber = 3;
    private long currLevelNum_;
    /// <summary>
    ///当前关卡号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrLevelNum {
      get { return currLevelNum_; }
      set {
        currLevelNum_ = value;
      }
    }

    /// <summary>Field number for the "currRoomType" field.</summary>
    public const int CurrRoomTypeFieldNumber = 4;
    private long currRoomType_;
    /// <summary>
    ///当前关卡类型
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrRoomType {
      get { return currRoomType_; }
      set {
        currRoomType_ = value;
      }
    }

    /// <summary>Field number for the "currHeroLevel" field.</summary>
    public const int CurrHeroLevelFieldNumber = 5;
    private long currHeroLevel_;
    /// <summary>
    ///当前玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrHeroLevel {
      get { return currHeroLevel_; }
      set {
        currHeroLevel_ = value;
      }
    }

    /// <summary>Field number for the "currGoldCount" field.</summary>
    public const int CurrGoldCountFieldNumber = 6;
    private long currGoldCount_;
    /// <summary>
    ///当前金币数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrGoldCount {
      get { return currGoldCount_; }
      set {
        currGoldCount_ = value;
      }
    }

    /// <summary>Field number for the "currExpCount" field.</summary>
    public const int CurrExpCountFieldNumber = 7;
    private long currExpCount_;
    /// <summary>
    ///当前经验数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrExpCount {
      get { return currExpCount_; }
      set {
        currExpCount_ = value;
      }
    }

    /// <summary>Field number for the "currEquipments" field.</summary>
    public const int CurrEquipmentsFieldNumber = 8;
    private static readonly pb::FieldCodec<long> _repeated_currEquipments_codec
        = pb::FieldCodec.ForInt64(66);
    private readonly pbc::RepeatedField<long> currEquipments_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///当前拥有的装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CurrEquipments {
      get { return currEquipments_; }
    }

    /// <summary>Field number for the "currAbilitys" field.</summary>
    public const int CurrAbilitysFieldNumber = 9;
    private static readonly pb::FieldCodec<long> _repeated_currAbilitys_codec
        = pb::FieldCodec.ForInt64(74);
    private readonly pbc::RepeatedField<long> currAbilitys_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///当前拥有的能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CurrAbilitys {
      get { return currAbilitys_; }
    }

    /// <summary>Field number for the "extraBuffs" field.</summary>
    public const int ExtraBuffsFieldNumber = 10;
    private static readonly pb::FieldCodec<long> _repeated_extraBuffs_codec
        = pb::FieldCodec.ForInt64(82);
    private readonly pbc::RepeatedField<long> extraBuffs_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///额外的buff
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ExtraBuffs {
      get { return extraBuffs_; }
    }

    /// <summary>Field number for the "bigTurntableTimes" field.</summary>
    public const int BigTurntableTimesFieldNumber = 11;
    private long bigTurntableTimes_;
    /// <summary>
    ///大转盘旋转的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long BigTurntableTimes {
      get { return bigTurntableTimes_; }
      set {
        bigTurntableTimes_ = value;
      }
    }

    /// <summary>Field number for the "storeRefreshCount" field.</summary>
    public const int StoreRefreshCountFieldNumber = 12;
    private long storeRefreshCount_;
    /// <summary>
    ///商店刷新的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StoreRefreshCount {
      get { return storeRefreshCount_; }
      set {
        storeRefreshCount_ = value;
      }
    }

    /// <summary>Field number for the "killNormalMobCount" field.</summary>
    public const int KillNormalMobCountFieldNumber = 13;
    private long killNormalMobCount_;
    /// <summary>
    ///击杀普通怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KillNormalMobCount {
      get { return killNormalMobCount_; }
      set {
        killNormalMobCount_ = value;
      }
    }

    /// <summary>Field number for the "killElitMobcount" field.</summary>
    public const int KillElitMobcountFieldNumber = 14;
    private long killElitMobcount_;
    /// <summary>
    ///击杀精英怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KillElitMobcount {
      get { return killElitMobcount_; }
      set {
        killElitMobcount_ = value;
      }
    }

    /// <summary>Field number for the "quitCount" field.</summary>
    public const int QuitCountFieldNumber = 15;
    private long quitCount_;
    /// <summary>
    ///用户退出次数 退出过一次之后再退出不可重新进入挑战
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long QuitCount {
      get { return quitCount_; }
      set {
        quitCount_ = value;
      }
    }

    /// <summary>Field number for the "bIsRevived" field.</summary>
    public const int BIsRevivedFieldNumber = 16;
    private bool bIsRevived_;
    /// <summary>
    ///是否复活过了
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BIsRevived {
      get { return bIsRevived_; }
      set {
        bIsRevived_ = value;
      }
    }

    /// <summary>Field number for the "storeFreeRefreshCount" field.</summary>
    public const int StoreFreeRefreshCountFieldNumber = 17;
    private long storeFreeRefreshCount_;
    /// <summary>
    ///商店免费刷新使用的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long StoreFreeRefreshCount {
      get { return storeFreeRefreshCount_; }
      set {
        storeFreeRefreshCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LevelMapBattleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LevelMapBattleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (RandomSeed != other.RandomSeed) return false;
      if (CurrLevelNum != other.CurrLevelNum) return false;
      if (CurrRoomType != other.CurrRoomType) return false;
      if (CurrHeroLevel != other.CurrHeroLevel) return false;
      if (CurrGoldCount != other.CurrGoldCount) return false;
      if (CurrExpCount != other.CurrExpCount) return false;
      if(!currEquipments_.Equals(other.currEquipments_)) return false;
      if(!currAbilitys_.Equals(other.currAbilitys_)) return false;
      if(!extraBuffs_.Equals(other.extraBuffs_)) return false;
      if (BigTurntableTimes != other.BigTurntableTimes) return false;
      if (StoreRefreshCount != other.StoreRefreshCount) return false;
      if (KillNormalMobCount != other.KillNormalMobCount) return false;
      if (KillElitMobcount != other.KillElitMobcount) return false;
      if (QuitCount != other.QuitCount) return false;
      if (BIsRevived != other.BIsRevived) return false;
      if (StoreFreeRefreshCount != other.StoreFreeRefreshCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId != 0L) hash ^= MapId.GetHashCode();
      if (RandomSeed != 0L) hash ^= RandomSeed.GetHashCode();
      if (CurrLevelNum != 0L) hash ^= CurrLevelNum.GetHashCode();
      if (CurrRoomType != 0L) hash ^= CurrRoomType.GetHashCode();
      if (CurrHeroLevel != 0L) hash ^= CurrHeroLevel.GetHashCode();
      if (CurrGoldCount != 0L) hash ^= CurrGoldCount.GetHashCode();
      if (CurrExpCount != 0L) hash ^= CurrExpCount.GetHashCode();
      hash ^= currEquipments_.GetHashCode();
      hash ^= currAbilitys_.GetHashCode();
      hash ^= extraBuffs_.GetHashCode();
      if (BigTurntableTimes != 0L) hash ^= BigTurntableTimes.GetHashCode();
      if (StoreRefreshCount != 0L) hash ^= StoreRefreshCount.GetHashCode();
      if (KillNormalMobCount != 0L) hash ^= KillNormalMobCount.GetHashCode();
      if (KillElitMobcount != 0L) hash ^= KillElitMobcount.GetHashCode();
      if (QuitCount != 0L) hash ^= QuitCount.GetHashCode();
      if (BIsRevived != false) hash ^= BIsRevived.GetHashCode();
      if (StoreFreeRefreshCount != 0L) hash ^= StoreFreeRefreshCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MapId);
      }
      if (RandomSeed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RandomSeed);
      }
      if (CurrLevelNum != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrLevelNum);
      }
      if (CurrRoomType != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrRoomType);
      }
      if (CurrHeroLevel != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CurrHeroLevel);
      }
      if (CurrGoldCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CurrGoldCount);
      }
      if (CurrExpCount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CurrExpCount);
      }
      currEquipments_.WriteTo(output, _repeated_currEquipments_codec);
      currAbilitys_.WriteTo(output, _repeated_currAbilitys_codec);
      extraBuffs_.WriteTo(output, _repeated_extraBuffs_codec);
      if (BigTurntableTimes != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(BigTurntableTimes);
      }
      if (StoreRefreshCount != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(StoreRefreshCount);
      }
      if (KillNormalMobCount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(KillNormalMobCount);
      }
      if (KillElitMobcount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(KillElitMobcount);
      }
      if (QuitCount != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(QuitCount);
      }
      if (BIsRevived != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(BIsRevived);
      }
      if (StoreFreeRefreshCount != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(StoreFreeRefreshCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MapId);
      }
      if (RandomSeed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RandomSeed);
      }
      if (CurrLevelNum != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrLevelNum);
      }
      if (CurrRoomType != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrRoomType);
      }
      if (CurrHeroLevel != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CurrHeroLevel);
      }
      if (CurrGoldCount != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CurrGoldCount);
      }
      if (CurrExpCount != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(CurrExpCount);
      }
      currEquipments_.WriteTo(ref output, _repeated_currEquipments_codec);
      currAbilitys_.WriteTo(ref output, _repeated_currAbilitys_codec);
      extraBuffs_.WriteTo(ref output, _repeated_extraBuffs_codec);
      if (BigTurntableTimes != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(BigTurntableTimes);
      }
      if (StoreRefreshCount != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(StoreRefreshCount);
      }
      if (KillNormalMobCount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(KillNormalMobCount);
      }
      if (KillElitMobcount != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(KillElitMobcount);
      }
      if (QuitCount != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(QuitCount);
      }
      if (BIsRevived != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(BIsRevived);
      }
      if (StoreFreeRefreshCount != 0L) {
        output.WriteRawTag(136, 1);
        output.WriteInt64(StoreFreeRefreshCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MapId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MapId);
      }
      if (RandomSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RandomSeed);
      }
      if (CurrLevelNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrLevelNum);
      }
      if (CurrRoomType != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrRoomType);
      }
      if (CurrHeroLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrHeroLevel);
      }
      if (CurrGoldCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrGoldCount);
      }
      if (CurrExpCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrExpCount);
      }
      size += currEquipments_.CalculateSize(_repeated_currEquipments_codec);
      size += currAbilitys_.CalculateSize(_repeated_currAbilitys_codec);
      size += extraBuffs_.CalculateSize(_repeated_extraBuffs_codec);
      if (BigTurntableTimes != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BigTurntableTimes);
      }
      if (StoreRefreshCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StoreRefreshCount);
      }
      if (KillNormalMobCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KillNormalMobCount);
      }
      if (KillElitMobcount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KillElitMobcount);
      }
      if (QuitCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(QuitCount);
      }
      if (BIsRevived != false) {
        size += 2 + 1;
      }
      if (StoreFreeRefreshCount != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(StoreFreeRefreshCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LevelMapBattleData other) {
      if (other == null) {
        return;
      }
      if (other.MapId != 0L) {
        MapId = other.MapId;
      }
      if (other.RandomSeed != 0L) {
        RandomSeed = other.RandomSeed;
      }
      if (other.CurrLevelNum != 0L) {
        CurrLevelNum = other.CurrLevelNum;
      }
      if (other.CurrRoomType != 0L) {
        CurrRoomType = other.CurrRoomType;
      }
      if (other.CurrHeroLevel != 0L) {
        CurrHeroLevel = other.CurrHeroLevel;
      }
      if (other.CurrGoldCount != 0L) {
        CurrGoldCount = other.CurrGoldCount;
      }
      if (other.CurrExpCount != 0L) {
        CurrExpCount = other.CurrExpCount;
      }
      currEquipments_.Add(other.currEquipments_);
      currAbilitys_.Add(other.currAbilitys_);
      extraBuffs_.Add(other.extraBuffs_);
      if (other.BigTurntableTimes != 0L) {
        BigTurntableTimes = other.BigTurntableTimes;
      }
      if (other.StoreRefreshCount != 0L) {
        StoreRefreshCount = other.StoreRefreshCount;
      }
      if (other.KillNormalMobCount != 0L) {
        KillNormalMobCount = other.KillNormalMobCount;
      }
      if (other.KillElitMobcount != 0L) {
        KillElitMobcount = other.KillElitMobcount;
      }
      if (other.QuitCount != 0L) {
        QuitCount = other.QuitCount;
      }
      if (other.BIsRevived != false) {
        BIsRevived = other.BIsRevived;
      }
      if (other.StoreFreeRefreshCount != 0L) {
        StoreFreeRefreshCount = other.StoreFreeRefreshCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MapId = input.ReadInt64();
            break;
          }
          case 16: {
            RandomSeed = input.ReadInt64();
            break;
          }
          case 24: {
            CurrLevelNum = input.ReadInt64();
            break;
          }
          case 32: {
            CurrRoomType = input.ReadInt64();
            break;
          }
          case 40: {
            CurrHeroLevel = input.ReadInt64();
            break;
          }
          case 48: {
            CurrGoldCount = input.ReadInt64();
            break;
          }
          case 56: {
            CurrExpCount = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            currEquipments_.AddEntriesFrom(input, _repeated_currEquipments_codec);
            break;
          }
          case 74:
          case 72: {
            currAbilitys_.AddEntriesFrom(input, _repeated_currAbilitys_codec);
            break;
          }
          case 82:
          case 80: {
            extraBuffs_.AddEntriesFrom(input, _repeated_extraBuffs_codec);
            break;
          }
          case 88: {
            BigTurntableTimes = input.ReadInt64();
            break;
          }
          case 96: {
            StoreRefreshCount = input.ReadInt64();
            break;
          }
          case 104: {
            KillNormalMobCount = input.ReadInt64();
            break;
          }
          case 112: {
            KillElitMobcount = input.ReadInt64();
            break;
          }
          case 120: {
            QuitCount = input.ReadInt64();
            break;
          }
          case 128: {
            BIsRevived = input.ReadBool();
            break;
          }
          case 136: {
            StoreFreeRefreshCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MapId = input.ReadInt64();
            break;
          }
          case 16: {
            RandomSeed = input.ReadInt64();
            break;
          }
          case 24: {
            CurrLevelNum = input.ReadInt64();
            break;
          }
          case 32: {
            CurrRoomType = input.ReadInt64();
            break;
          }
          case 40: {
            CurrHeroLevel = input.ReadInt64();
            break;
          }
          case 48: {
            CurrGoldCount = input.ReadInt64();
            break;
          }
          case 56: {
            CurrExpCount = input.ReadInt64();
            break;
          }
          case 66:
          case 64: {
            currEquipments_.AddEntriesFrom(ref input, _repeated_currEquipments_codec);
            break;
          }
          case 74:
          case 72: {
            currAbilitys_.AddEntriesFrom(ref input, _repeated_currAbilitys_codec);
            break;
          }
          case 82:
          case 80: {
            extraBuffs_.AddEntriesFrom(ref input, _repeated_extraBuffs_codec);
            break;
          }
          case 88: {
            BigTurntableTimes = input.ReadInt64();
            break;
          }
          case 96: {
            StoreRefreshCount = input.ReadInt64();
            break;
          }
          case 104: {
            KillNormalMobCount = input.ReadInt64();
            break;
          }
          case 112: {
            KillElitMobcount = input.ReadInt64();
            break;
          }
          case 120: {
            QuitCount = input.ReadInt64();
            break;
          }
          case 128: {
            BIsRevived = input.ReadBool();
            break;
          }
          case 136: {
            StoreFreeRefreshCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EndlessMapBattleData : pb::IMessage<EndlessMapBattleData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessMapBattleData> _parser = new pb::MessageParser<EndlessMapBattleData>(() => new EndlessMapBattleData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EndlessMapBattleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapBattleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapBattleData(EndlessMapBattleData other) : this() {
      areaId_ = other.areaId_;
      randomSeed_ = other.randomSeed_;
      currHeroLevel_ = other.currHeroLevel_;
      currExpCount_ = other.currExpCount_;
      currEquipments_ = other.currEquipments_.Clone();
      currAbilitys_ = other.currAbilitys_.Clone();
      extraBuffs_ = other.extraBuffs_.Clone();
      killNormalMobCount_ = other.killNormalMobCount_;
      killElitMobcount_ = other.killElitMobcount_;
      bIsRevived_ = other.bIsRevived_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapBattleData Clone() {
      return new EndlessMapBattleData(this);
    }

    /// <summary>Field number for the "areaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private long areaId_;
    /// <summary>
    ///区域id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "randomSeed" field.</summary>
    public const int RandomSeedFieldNumber = 2;
    private long randomSeed_;
    /// <summary>
    ///随机种子
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long RandomSeed {
      get { return randomSeed_; }
      set {
        randomSeed_ = value;
      }
    }

    /// <summary>Field number for the "currHeroLevel" field.</summary>
    public const int CurrHeroLevelFieldNumber = 3;
    private long currHeroLevel_;
    /// <summary>
    ///当前玩家等级
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrHeroLevel {
      get { return currHeroLevel_; }
      set {
        currHeroLevel_ = value;
      }
    }

    /// <summary>Field number for the "currExpCount" field.</summary>
    public const int CurrExpCountFieldNumber = 4;
    private long currExpCount_;
    /// <summary>
    ///当前经验数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long CurrExpCount {
      get { return currExpCount_; }
      set {
        currExpCount_ = value;
      }
    }

    /// <summary>Field number for the "currEquipments" field.</summary>
    public const int CurrEquipmentsFieldNumber = 5;
    private static readonly pb::FieldCodec<long> _repeated_currEquipments_codec
        = pb::FieldCodec.ForInt64(42);
    private readonly pbc::RepeatedField<long> currEquipments_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///当前拥有的装备
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CurrEquipments {
      get { return currEquipments_; }
    }

    /// <summary>Field number for the "currAbilitys" field.</summary>
    public const int CurrAbilitysFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_currAbilitys_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> currAbilitys_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///当前拥有的能力
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> CurrAbilitys {
      get { return currAbilitys_; }
    }

    /// <summary>Field number for the "extraBuffs" field.</summary>
    public const int ExtraBuffsFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_extraBuffs_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> extraBuffs_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///额外的buff
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> ExtraBuffs {
      get { return extraBuffs_; }
    }

    /// <summary>Field number for the "killNormalMobCount" field.</summary>
    public const int KillNormalMobCountFieldNumber = 8;
    private long killNormalMobCount_;
    /// <summary>
    ///击杀普通怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KillNormalMobCount {
      get { return killNormalMobCount_; }
      set {
        killNormalMobCount_ = value;
      }
    }

    /// <summary>Field number for the "killElitMobcount" field.</summary>
    public const int KillElitMobcountFieldNumber = 9;
    private long killElitMobcount_;
    /// <summary>
    ///击杀精英怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KillElitMobcount {
      get { return killElitMobcount_; }
      set {
        killElitMobcount_ = value;
      }
    }

    /// <summary>Field number for the "bIsRevived" field.</summary>
    public const int BIsRevivedFieldNumber = 10;
    private bool bIsRevived_;
    /// <summary>
    ///是否复活过了
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BIsRevived {
      get { return bIsRevived_; }
      set {
        bIsRevived_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EndlessMapBattleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EndlessMapBattleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if (RandomSeed != other.RandomSeed) return false;
      if (CurrHeroLevel != other.CurrHeroLevel) return false;
      if (CurrExpCount != other.CurrExpCount) return false;
      if(!currEquipments_.Equals(other.currEquipments_)) return false;
      if(!currAbilitys_.Equals(other.currAbilitys_)) return false;
      if(!extraBuffs_.Equals(other.extraBuffs_)) return false;
      if (KillNormalMobCount != other.KillNormalMobCount) return false;
      if (KillElitMobcount != other.KillElitMobcount) return false;
      if (BIsRevived != other.BIsRevived) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId != 0L) hash ^= AreaId.GetHashCode();
      if (RandomSeed != 0L) hash ^= RandomSeed.GetHashCode();
      if (CurrHeroLevel != 0L) hash ^= CurrHeroLevel.GetHashCode();
      if (CurrExpCount != 0L) hash ^= CurrExpCount.GetHashCode();
      hash ^= currEquipments_.GetHashCode();
      hash ^= currAbilitys_.GetHashCode();
      hash ^= extraBuffs_.GetHashCode();
      if (KillNormalMobCount != 0L) hash ^= KillNormalMobCount.GetHashCode();
      if (KillElitMobcount != 0L) hash ^= KillElitMobcount.GetHashCode();
      if (BIsRevived != false) hash ^= BIsRevived.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AreaId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AreaId);
      }
      if (RandomSeed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RandomSeed);
      }
      if (CurrHeroLevel != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrHeroLevel);
      }
      if (CurrExpCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrExpCount);
      }
      currEquipments_.WriteTo(output, _repeated_currEquipments_codec);
      currAbilitys_.WriteTo(output, _repeated_currAbilitys_codec);
      extraBuffs_.WriteTo(output, _repeated_extraBuffs_codec);
      if (KillNormalMobCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(KillNormalMobCount);
      }
      if (KillElitMobcount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(KillElitMobcount);
      }
      if (BIsRevived != false) {
        output.WriteRawTag(80);
        output.WriteBool(BIsRevived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AreaId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(AreaId);
      }
      if (RandomSeed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RandomSeed);
      }
      if (CurrHeroLevel != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CurrHeroLevel);
      }
      if (CurrExpCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CurrExpCount);
      }
      currEquipments_.WriteTo(ref output, _repeated_currEquipments_codec);
      currAbilitys_.WriteTo(ref output, _repeated_currAbilitys_codec);
      extraBuffs_.WriteTo(ref output, _repeated_extraBuffs_codec);
      if (KillNormalMobCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(KillNormalMobCount);
      }
      if (KillElitMobcount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(KillElitMobcount);
      }
      if (BIsRevived != false) {
        output.WriteRawTag(80);
        output.WriteBool(BIsRevived);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AreaId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AreaId);
      }
      if (RandomSeed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RandomSeed);
      }
      if (CurrHeroLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrHeroLevel);
      }
      if (CurrExpCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CurrExpCount);
      }
      size += currEquipments_.CalculateSize(_repeated_currEquipments_codec);
      size += currAbilitys_.CalculateSize(_repeated_currAbilitys_codec);
      size += extraBuffs_.CalculateSize(_repeated_extraBuffs_codec);
      if (KillNormalMobCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KillNormalMobCount);
      }
      if (KillElitMobcount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KillElitMobcount);
      }
      if (BIsRevived != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EndlessMapBattleData other) {
      if (other == null) {
        return;
      }
      if (other.AreaId != 0L) {
        AreaId = other.AreaId;
      }
      if (other.RandomSeed != 0L) {
        RandomSeed = other.RandomSeed;
      }
      if (other.CurrHeroLevel != 0L) {
        CurrHeroLevel = other.CurrHeroLevel;
      }
      if (other.CurrExpCount != 0L) {
        CurrExpCount = other.CurrExpCount;
      }
      currEquipments_.Add(other.currEquipments_);
      currAbilitys_.Add(other.currAbilitys_);
      extraBuffs_.Add(other.extraBuffs_);
      if (other.KillNormalMobCount != 0L) {
        KillNormalMobCount = other.KillNormalMobCount;
      }
      if (other.KillElitMobcount != 0L) {
        KillElitMobcount = other.KillElitMobcount;
      }
      if (other.BIsRevived != false) {
        BIsRevived = other.BIsRevived;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt64();
            break;
          }
          case 16: {
            RandomSeed = input.ReadInt64();
            break;
          }
          case 24: {
            CurrHeroLevel = input.ReadInt64();
            break;
          }
          case 32: {
            CurrExpCount = input.ReadInt64();
            break;
          }
          case 42:
          case 40: {
            currEquipments_.AddEntriesFrom(input, _repeated_currEquipments_codec);
            break;
          }
          case 50:
          case 48: {
            currAbilitys_.AddEntriesFrom(input, _repeated_currAbilitys_codec);
            break;
          }
          case 58:
          case 56: {
            extraBuffs_.AddEntriesFrom(input, _repeated_extraBuffs_codec);
            break;
          }
          case 64: {
            KillNormalMobCount = input.ReadInt64();
            break;
          }
          case 72: {
            KillElitMobcount = input.ReadInt64();
            break;
          }
          case 80: {
            BIsRevived = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AreaId = input.ReadInt64();
            break;
          }
          case 16: {
            RandomSeed = input.ReadInt64();
            break;
          }
          case 24: {
            CurrHeroLevel = input.ReadInt64();
            break;
          }
          case 32: {
            CurrExpCount = input.ReadInt64();
            break;
          }
          case 42:
          case 40: {
            currEquipments_.AddEntriesFrom(ref input, _repeated_currEquipments_codec);
            break;
          }
          case 50:
          case 48: {
            currAbilitys_.AddEntriesFrom(ref input, _repeated_currAbilitys_codec);
            break;
          }
          case 58:
          case 56: {
            extraBuffs_.AddEntriesFrom(ref input, _repeated_extraBuffs_codec);
            break;
          }
          case 64: {
            KillNormalMobCount = input.ReadInt64();
            break;
          }
          case 72: {
            KillElitMobcount = input.ReadInt64();
            break;
          }
          case 80: {
            BIsRevived = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LimitedItemGetInfo : pb::IMessage<LimitedItemGetInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LimitedItemGetInfo> _parser = new pb::MessageParser<LimitedItemGetInfo>(() => new LimitedItemGetInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LimitedItemGetInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitedItemGetInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitedItemGetInfo(LimitedItemGetInfo other) : this() {
      itemId_ = other.itemId_;
      getTime_ = other.getTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitedItemGetInfo Clone() {
      return new LimitedItemGetInfo(this);
    }

    /// <summary>Field number for the "itemId" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private long itemId_;
    /// <summary>
    ///道具id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long ItemId {
      get { return itemId_; }
      set {
        itemId_ = value;
      }
    }

    /// <summary>Field number for the "getTime" field.</summary>
    public const int GetTimeFieldNumber = 2;
    private long getTime_;
    /// <summary>
    ///获得的时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long GetTime {
      get { return getTime_; }
      set {
        getTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LimitedItemGetInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LimitedItemGetInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (GetTime != other.GetTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId != 0L) hash ^= ItemId.GetHashCode();
      if (GetTime != 0L) hash ^= GetTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ItemId);
      }
      if (GetTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(GetTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ItemId);
      }
      if (GetTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(GetTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ItemId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ItemId);
      }
      if (GetTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(GetTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LimitedItemGetInfo other) {
      if (other == null) {
        return;
      }
      if (other.ItemId != 0L) {
        ItemId = other.ItemId;
      }
      if (other.GetTime != 0L) {
        GetTime = other.GetTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ItemId = input.ReadInt64();
            break;
          }
          case 16: {
            GetTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ItemId = input.ReadInt64();
            break;
          }
          case 16: {
            GetTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LimitedItemGetData : pb::IMessage<LimitedItemGetData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LimitedItemGetData> _parser = new pb::MessageParser<LimitedItemGetData>(() => new LimitedItemGetData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LimitedItemGetData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitedItemGetData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitedItemGetData(LimitedItemGetData other) : this() {
      listInfo_ = other.listInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LimitedItemGetData Clone() {
      return new LimitedItemGetData(this);
    }

    /// <summary>Field number for the "listInfo" field.</summary>
    public const int ListInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.LimitedItemGetInfo> _repeated_listInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.LimitedItemGetInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.LimitedItemGetInfo> listInfo_ = new pbc::RepeatedField<global::Msg.LimitedItemGetInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Msg.LimitedItemGetInfo> ListInfo {
      get { return listInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LimitedItemGetData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LimitedItemGetData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listInfo_.Equals(other.listInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listInfo_.WriteTo(output, _repeated_listInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listInfo_.WriteTo(ref output, _repeated_listInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += listInfo_.CalculateSize(_repeated_listInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LimitedItemGetData other) {
      if (other == null) {
        return;
      }
      listInfo_.Add(other.listInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listInfo_.AddEntriesFrom(input, _repeated_listInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            listInfo_.AddEntriesFrom(ref input, _repeated_listInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EndlessMapLeaderboardAreaInfo : pb::IMessage<EndlessMapLeaderboardAreaInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessMapLeaderboardAreaInfo> _parser = new pb::MessageParser<EndlessMapLeaderboardAreaInfo>(() => new EndlessMapLeaderboardAreaInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EndlessMapLeaderboardAreaInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapLeaderboardAreaInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapLeaderboardAreaInfo(EndlessMapLeaderboardAreaInfo other) : this() {
      areaId_ = other.areaId_;
      areaRandomSeed_ = other.areaRandomSeed_;
      playerRanking_ = other.playerRanking_;
      playerMaxFraction_ = other.playerMaxFraction_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapLeaderboardAreaInfo Clone() {
      return new EndlessMapLeaderboardAreaInfo(this);
    }

    /// <summary>Field number for the "areaId" field.</summary>
    public const int AreaIdFieldNumber = 1;
    private int areaId_;
    /// <summary>
    ///区域id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaId {
      get { return areaId_; }
      set {
        areaId_ = value;
      }
    }

    /// <summary>Field number for the "areaRandomSeed" field.</summary>
    public const int AreaRandomSeedFieldNumber = 2;
    private int areaRandomSeed_;
    /// <summary>
    ///区域随机种子 用于随机当日的假玩家信息，假分数，假排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AreaRandomSeed {
      get { return areaRandomSeed_; }
      set {
        areaRandomSeed_ = value;
      }
    }

    /// <summary>Field number for the "playerRanking" field.</summary>
    public const int PlayerRankingFieldNumber = 3;
    private int playerRanking_;
    /// <summary>
    ///玩家排名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerRanking {
      get { return playerRanking_; }
      set {
        playerRanking_ = value;
      }
    }

    /// <summary>Field number for the "playerMaxFraction" field.</summary>
    public const int PlayerMaxFractionFieldNumber = 4;
    private int playerMaxFraction_;
    /// <summary>
    ///玩家最高分数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PlayerMaxFraction {
      get { return playerMaxFraction_; }
      set {
        playerMaxFraction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EndlessMapLeaderboardAreaInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EndlessMapLeaderboardAreaInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AreaId != other.AreaId) return false;
      if (AreaRandomSeed != other.AreaRandomSeed) return false;
      if (PlayerRanking != other.PlayerRanking) return false;
      if (PlayerMaxFraction != other.PlayerMaxFraction) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AreaId != 0) hash ^= AreaId.GetHashCode();
      if (AreaRandomSeed != 0) hash ^= AreaRandomSeed.GetHashCode();
      if (PlayerRanking != 0) hash ^= PlayerRanking.GetHashCode();
      if (PlayerMaxFraction != 0) hash ^= PlayerMaxFraction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AreaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (AreaRandomSeed != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AreaRandomSeed);
      }
      if (PlayerRanking != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerRanking);
      }
      if (PlayerMaxFraction != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerMaxFraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AreaId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(AreaId);
      }
      if (AreaRandomSeed != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AreaRandomSeed);
      }
      if (PlayerRanking != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerRanking);
      }
      if (PlayerMaxFraction != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerMaxFraction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AreaId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaId);
      }
      if (AreaRandomSeed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AreaRandomSeed);
      }
      if (PlayerRanking != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerRanking);
      }
      if (PlayerMaxFraction != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerMaxFraction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EndlessMapLeaderboardAreaInfo other) {
      if (other == null) {
        return;
      }
      if (other.AreaId != 0) {
        AreaId = other.AreaId;
      }
      if (other.AreaRandomSeed != 0) {
        AreaRandomSeed = other.AreaRandomSeed;
      }
      if (other.PlayerRanking != 0) {
        PlayerRanking = other.PlayerRanking;
      }
      if (other.PlayerMaxFraction != 0) {
        PlayerMaxFraction = other.PlayerMaxFraction;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 16: {
            AreaRandomSeed = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerRanking = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerMaxFraction = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            AreaId = input.ReadInt32();
            break;
          }
          case 16: {
            AreaRandomSeed = input.ReadInt32();
            break;
          }
          case 24: {
            PlayerRanking = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerMaxFraction = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class EndlessMapLeaderboardData : pb::IMessage<EndlessMapLeaderboardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EndlessMapLeaderboardData> _parser = new pb::MessageParser<EndlessMapLeaderboardData>(() => new EndlessMapLeaderboardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EndlessMapLeaderboardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapLeaderboardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapLeaderboardData(EndlessMapLeaderboardData other) : this() {
      listAreaInfo_ = other.listAreaInfo_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EndlessMapLeaderboardData Clone() {
      return new EndlessMapLeaderboardData(this);
    }

    /// <summary>Field number for the "listAreaInfo" field.</summary>
    public const int ListAreaInfoFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.EndlessMapLeaderboardAreaInfo> _repeated_listAreaInfo_codec
        = pb::FieldCodec.ForMessage(10, global::Msg.EndlessMapLeaderboardAreaInfo.Parser);
    private readonly pbc::RepeatedField<global::Msg.EndlessMapLeaderboardAreaInfo> listAreaInfo_ = new pbc::RepeatedField<global::Msg.EndlessMapLeaderboardAreaInfo>();
    /// <summary>
    ///各区域的排名信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Msg.EndlessMapLeaderboardAreaInfo> ListAreaInfo {
      get { return listAreaInfo_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EndlessMapLeaderboardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EndlessMapLeaderboardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listAreaInfo_.Equals(other.listAreaInfo_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listAreaInfo_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listAreaInfo_.WriteTo(output, _repeated_listAreaInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listAreaInfo_.WriteTo(ref output, _repeated_listAreaInfo_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += listAreaInfo_.CalculateSize(_repeated_listAreaInfo_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EndlessMapLeaderboardData other) {
      if (other == null) {
        return;
      }
      listAreaInfo_.Add(other.listAreaInfo_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            listAreaInfo_.AddEntriesFrom(input, _repeated_listAreaInfo_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            listAreaInfo_.AddEntriesFrom(ref input, _repeated_listAreaInfo_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaskLogInfo : pb::IMessage<TaskLogInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskLogInfo> _parser = new pb::MessageParser<TaskLogInfo>(() => new TaskLogInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskLogInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskLogInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskLogInfo(TaskLogInfo other) : this() {
      killNorMobCount_ = other.killNorMobCount_;
      killEliteMobCount_ = other.killEliteMobCount_;
      norVendingBuyCount_ = other.norVendingBuyCount_;
      magicVendingBuyCount_ = other.magicVendingBuyCount_;
      passedMaxLevel_ = other.passedMaxLevel_;
      passedMapIds_ = other.passedMapIds_.Clone();
      passedIn20MinMapIds_ = other.passedIn20MinMapIds_.Clone();
      heroUpStarCount_ = other.heroUpStarCount_;
      openPetEggCount_ = other.openPetEggCount_;
      talentUnlockCount_ = other.talentUnlockCount_;
      getRewardTaskId_ = other.getRewardTaskId_.Clone();
      getVipRewardTaskId_ = other.getVipRewardTaskId_.Clone();
      endTime_ = other.endTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskLogInfo Clone() {
      return new TaskLogInfo(this);
    }

    /// <summary>Field number for the "KillNorMobCount" field.</summary>
    public const int KillNorMobCountFieldNumber = 1;
    private long killNorMobCount_;
    /// <summary>
    ///击杀普通怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KillNorMobCount {
      get { return killNorMobCount_; }
      set {
        killNorMobCount_ = value;
      }
    }

    /// <summary>Field number for the "KillEliteMobCount" field.</summary>
    public const int KillEliteMobCountFieldNumber = 2;
    private long killEliteMobCount_;
    /// <summary>
    ///击杀精英怪物数量
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long KillEliteMobCount {
      get { return killEliteMobCount_; }
      set {
        killEliteMobCount_ = value;
      }
    }

    /// <summary>Field number for the "NorVendingBuyCount" field.</summary>
    public const int NorVendingBuyCountFieldNumber = 3;
    private long norVendingBuyCount_;
    /// <summary>
    ///普通售卖机处购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long NorVendingBuyCount {
      get { return norVendingBuyCount_; }
      set {
        norVendingBuyCount_ = value;
      }
    }

    /// <summary>Field number for the "MagicVendingBuyCount" field.</summary>
    public const int MagicVendingBuyCountFieldNumber = 4;
    private long magicVendingBuyCount_;
    /// <summary>
    ///魔法售卖机处购买次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long MagicVendingBuyCount {
      get { return magicVendingBuyCount_; }
      set {
        magicVendingBuyCount_ = value;
      }
    }

    /// <summary>Field number for the "PassedMaxLevel" field.</summary>
    public const int PassedMaxLevelFieldNumber = 5;
    private long passedMaxLevel_;
    /// <summary>
    ///挑战过了的最高关卡
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PassedMaxLevel {
      get { return passedMaxLevel_; }
      set {
        passedMaxLevel_ = value;
      }
    }

    /// <summary>Field number for the "PassedMapIds" field.</summary>
    public const int PassedMapIdsFieldNumber = 6;
    private static readonly pb::FieldCodec<long> _repeated_passedMapIds_codec
        = pb::FieldCodec.ForInt64(50);
    private readonly pbc::RepeatedField<long> passedMapIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///通关过了的地图id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> PassedMapIds {
      get { return passedMapIds_; }
    }

    /// <summary>Field number for the "PassedIn20MinMapIds" field.</summary>
    public const int PassedIn20MinMapIdsFieldNumber = 7;
    private static readonly pb::FieldCodec<long> _repeated_passedIn20MinMapIds_codec
        = pb::FieldCodec.ForInt64(58);
    private readonly pbc::RepeatedField<long> passedIn20MinMapIds_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///在20分钟内通关过了的地图id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> PassedIn20MinMapIds {
      get { return passedIn20MinMapIds_; }
    }

    /// <summary>Field number for the "HeroUpStarCount" field.</summary>
    public const int HeroUpStarCountFieldNumber = 8;
    private long heroUpStarCount_;
    /// <summary>
    ///英雄升星次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long HeroUpStarCount {
      get { return heroUpStarCount_; }
      set {
        heroUpStarCount_ = value;
      }
    }

    /// <summary>Field number for the "OpenPetEggCount" field.</summary>
    public const int OpenPetEggCountFieldNumber = 9;
    private long openPetEggCount_;
    /// <summary>
    ///开启宠物蛋的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long OpenPetEggCount {
      get { return openPetEggCount_; }
      set {
        openPetEggCount_ = value;
      }
    }

    /// <summary>Field number for the "TalentUnlockCount" field.</summary>
    public const int TalentUnlockCountFieldNumber = 10;
    private long talentUnlockCount_;
    /// <summary>
    ///解锁天赋的次数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TalentUnlockCount {
      get { return talentUnlockCount_; }
      set {
        talentUnlockCount_ = value;
      }
    }

    /// <summary>Field number for the "GetRewardTaskId" field.</summary>
    public const int GetRewardTaskIdFieldNumber = 11;
    private static readonly pb::FieldCodec<long> _repeated_getRewardTaskId_codec
        = pb::FieldCodec.ForInt64(90);
    private readonly pbc::RepeatedField<long> getRewardTaskId_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///领取过了奖励的任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> GetRewardTaskId {
      get { return getRewardTaskId_; }
    }

    /// <summary>Field number for the "GetVipRewardTaskId" field.</summary>
    public const int GetVipRewardTaskIdFieldNumber = 12;
    private static readonly pb::FieldCodec<long> _repeated_getVipRewardTaskId_codec
        = pb::FieldCodec.ForInt64(98);
    private readonly pbc::RepeatedField<long> getVipRewardTaskId_ = new pbc::RepeatedField<long>();
    /// <summary>
    ///领取过了Vip奖励的任务ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<long> GetVipRewardTaskId {
      get { return getVipRewardTaskId_; }
    }

    /// <summary>Field number for the "endTime" field.</summary>
    public const int EndTimeFieldNumber = 13;
    private long endTime_;
    /// <summary>
    ///本次结束时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskLogInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskLogInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KillNorMobCount != other.KillNorMobCount) return false;
      if (KillEliteMobCount != other.KillEliteMobCount) return false;
      if (NorVendingBuyCount != other.NorVendingBuyCount) return false;
      if (MagicVendingBuyCount != other.MagicVendingBuyCount) return false;
      if (PassedMaxLevel != other.PassedMaxLevel) return false;
      if(!passedMapIds_.Equals(other.passedMapIds_)) return false;
      if(!passedIn20MinMapIds_.Equals(other.passedIn20MinMapIds_)) return false;
      if (HeroUpStarCount != other.HeroUpStarCount) return false;
      if (OpenPetEggCount != other.OpenPetEggCount) return false;
      if (TalentUnlockCount != other.TalentUnlockCount) return false;
      if(!getRewardTaskId_.Equals(other.getRewardTaskId_)) return false;
      if(!getVipRewardTaskId_.Equals(other.getVipRewardTaskId_)) return false;
      if (EndTime != other.EndTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (KillNorMobCount != 0L) hash ^= KillNorMobCount.GetHashCode();
      if (KillEliteMobCount != 0L) hash ^= KillEliteMobCount.GetHashCode();
      if (NorVendingBuyCount != 0L) hash ^= NorVendingBuyCount.GetHashCode();
      if (MagicVendingBuyCount != 0L) hash ^= MagicVendingBuyCount.GetHashCode();
      if (PassedMaxLevel != 0L) hash ^= PassedMaxLevel.GetHashCode();
      hash ^= passedMapIds_.GetHashCode();
      hash ^= passedIn20MinMapIds_.GetHashCode();
      if (HeroUpStarCount != 0L) hash ^= HeroUpStarCount.GetHashCode();
      if (OpenPetEggCount != 0L) hash ^= OpenPetEggCount.GetHashCode();
      if (TalentUnlockCount != 0L) hash ^= TalentUnlockCount.GetHashCode();
      hash ^= getRewardTaskId_.GetHashCode();
      hash ^= getVipRewardTaskId_.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (KillNorMobCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(KillNorMobCount);
      }
      if (KillEliteMobCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(KillEliteMobCount);
      }
      if (NorVendingBuyCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NorVendingBuyCount);
      }
      if (MagicVendingBuyCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MagicVendingBuyCount);
      }
      if (PassedMaxLevel != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(PassedMaxLevel);
      }
      passedMapIds_.WriteTo(output, _repeated_passedMapIds_codec);
      passedIn20MinMapIds_.WriteTo(output, _repeated_passedIn20MinMapIds_codec);
      if (HeroUpStarCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(HeroUpStarCount);
      }
      if (OpenPetEggCount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(OpenPetEggCount);
      }
      if (TalentUnlockCount != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TalentUnlockCount);
      }
      getRewardTaskId_.WriteTo(output, _repeated_getRewardTaskId_codec);
      getVipRewardTaskId_.WriteTo(output, _repeated_getVipRewardTaskId_codec);
      if (EndTime != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (KillNorMobCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(KillNorMobCount);
      }
      if (KillEliteMobCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(KillEliteMobCount);
      }
      if (NorVendingBuyCount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NorVendingBuyCount);
      }
      if (MagicVendingBuyCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(MagicVendingBuyCount);
      }
      if (PassedMaxLevel != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(PassedMaxLevel);
      }
      passedMapIds_.WriteTo(ref output, _repeated_passedMapIds_codec);
      passedIn20MinMapIds_.WriteTo(ref output, _repeated_passedIn20MinMapIds_codec);
      if (HeroUpStarCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(HeroUpStarCount);
      }
      if (OpenPetEggCount != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(OpenPetEggCount);
      }
      if (TalentUnlockCount != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(TalentUnlockCount);
      }
      getRewardTaskId_.WriteTo(ref output, _repeated_getRewardTaskId_codec);
      getVipRewardTaskId_.WriteTo(ref output, _repeated_getVipRewardTaskId_codec);
      if (EndTime != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(EndTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (KillNorMobCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KillNorMobCount);
      }
      if (KillEliteMobCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(KillEliteMobCount);
      }
      if (NorVendingBuyCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NorVendingBuyCount);
      }
      if (MagicVendingBuyCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MagicVendingBuyCount);
      }
      if (PassedMaxLevel != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PassedMaxLevel);
      }
      size += passedMapIds_.CalculateSize(_repeated_passedMapIds_codec);
      size += passedIn20MinMapIds_.CalculateSize(_repeated_passedIn20MinMapIds_codec);
      if (HeroUpStarCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HeroUpStarCount);
      }
      if (OpenPetEggCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(OpenPetEggCount);
      }
      if (TalentUnlockCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TalentUnlockCount);
      }
      size += getRewardTaskId_.CalculateSize(_repeated_getRewardTaskId_codec);
      size += getVipRewardTaskId_.CalculateSize(_repeated_getVipRewardTaskId_codec);
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskLogInfo other) {
      if (other == null) {
        return;
      }
      if (other.KillNorMobCount != 0L) {
        KillNorMobCount = other.KillNorMobCount;
      }
      if (other.KillEliteMobCount != 0L) {
        KillEliteMobCount = other.KillEliteMobCount;
      }
      if (other.NorVendingBuyCount != 0L) {
        NorVendingBuyCount = other.NorVendingBuyCount;
      }
      if (other.MagicVendingBuyCount != 0L) {
        MagicVendingBuyCount = other.MagicVendingBuyCount;
      }
      if (other.PassedMaxLevel != 0L) {
        PassedMaxLevel = other.PassedMaxLevel;
      }
      passedMapIds_.Add(other.passedMapIds_);
      passedIn20MinMapIds_.Add(other.passedIn20MinMapIds_);
      if (other.HeroUpStarCount != 0L) {
        HeroUpStarCount = other.HeroUpStarCount;
      }
      if (other.OpenPetEggCount != 0L) {
        OpenPetEggCount = other.OpenPetEggCount;
      }
      if (other.TalentUnlockCount != 0L) {
        TalentUnlockCount = other.TalentUnlockCount;
      }
      getRewardTaskId_.Add(other.getRewardTaskId_);
      getVipRewardTaskId_.Add(other.getVipRewardTaskId_);
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            KillNorMobCount = input.ReadInt64();
            break;
          }
          case 16: {
            KillEliteMobCount = input.ReadInt64();
            break;
          }
          case 24: {
            NorVendingBuyCount = input.ReadInt64();
            break;
          }
          case 32: {
            MagicVendingBuyCount = input.ReadInt64();
            break;
          }
          case 40: {
            PassedMaxLevel = input.ReadInt64();
            break;
          }
          case 50:
          case 48: {
            passedMapIds_.AddEntriesFrom(input, _repeated_passedMapIds_codec);
            break;
          }
          case 58:
          case 56: {
            passedIn20MinMapIds_.AddEntriesFrom(input, _repeated_passedIn20MinMapIds_codec);
            break;
          }
          case 64: {
            HeroUpStarCount = input.ReadInt64();
            break;
          }
          case 72: {
            OpenPetEggCount = input.ReadInt64();
            break;
          }
          case 80: {
            TalentUnlockCount = input.ReadInt64();
            break;
          }
          case 90:
          case 88: {
            getRewardTaskId_.AddEntriesFrom(input, _repeated_getRewardTaskId_codec);
            break;
          }
          case 98:
          case 96: {
            getVipRewardTaskId_.AddEntriesFrom(input, _repeated_getVipRewardTaskId_codec);
            break;
          }
          case 104: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            KillNorMobCount = input.ReadInt64();
            break;
          }
          case 16: {
            KillEliteMobCount = input.ReadInt64();
            break;
          }
          case 24: {
            NorVendingBuyCount = input.ReadInt64();
            break;
          }
          case 32: {
            MagicVendingBuyCount = input.ReadInt64();
            break;
          }
          case 40: {
            PassedMaxLevel = input.ReadInt64();
            break;
          }
          case 50:
          case 48: {
            passedMapIds_.AddEntriesFrom(ref input, _repeated_passedMapIds_codec);
            break;
          }
          case 58:
          case 56: {
            passedIn20MinMapIds_.AddEntriesFrom(ref input, _repeated_passedIn20MinMapIds_codec);
            break;
          }
          case 64: {
            HeroUpStarCount = input.ReadInt64();
            break;
          }
          case 72: {
            OpenPetEggCount = input.ReadInt64();
            break;
          }
          case 80: {
            TalentUnlockCount = input.ReadInt64();
            break;
          }
          case 90:
          case 88: {
            getRewardTaskId_.AddEntriesFrom(ref input, _repeated_getRewardTaskId_codec);
            break;
          }
          case 98:
          case 96: {
            getVipRewardTaskId_.AddEntriesFrom(ref input, _repeated_getVipRewardTaskId_codec);
            break;
          }
          case 104: {
            EndTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TaskLogData : pb::IMessage<TaskLogData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaskLogData> _parser = new pb::MessageParser<TaskLogData>(() => new TaskLogData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TaskLogData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskLogData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskLogData(TaskLogData other) : this() {
      dailyLogInfo_ = other.dailyLogInfo_ != null ? other.dailyLogInfo_.Clone() : null;
      weeklyLogInfo_ = other.weeklyLogInfo_ != null ? other.weeklyLogInfo_.Clone() : null;
      achievementInfo_ = other.achievementInfo_ != null ? other.achievementInfo_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TaskLogData Clone() {
      return new TaskLogData(this);
    }

    /// <summary>Field number for the "DailyLogInfo" field.</summary>
    public const int DailyLogInfoFieldNumber = 1;
    private global::Msg.TaskLogInfo dailyLogInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.TaskLogInfo DailyLogInfo {
      get { return dailyLogInfo_; }
      set {
        dailyLogInfo_ = value;
      }
    }

    /// <summary>Field number for the "WeeklyLogInfo" field.</summary>
    public const int WeeklyLogInfoFieldNumber = 2;
    private global::Msg.TaskLogInfo weeklyLogInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.TaskLogInfo WeeklyLogInfo {
      get { return weeklyLogInfo_; }
      set {
        weeklyLogInfo_ = value;
      }
    }

    /// <summary>Field number for the "AchievementInfo" field.</summary>
    public const int AchievementInfoFieldNumber = 3;
    private global::Msg.TaskLogInfo achievementInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.TaskLogInfo AchievementInfo {
      get { return achievementInfo_; }
      set {
        achievementInfo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TaskLogData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TaskLogData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DailyLogInfo, other.DailyLogInfo)) return false;
      if (!object.Equals(WeeklyLogInfo, other.WeeklyLogInfo)) return false;
      if (!object.Equals(AchievementInfo, other.AchievementInfo)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (dailyLogInfo_ != null) hash ^= DailyLogInfo.GetHashCode();
      if (weeklyLogInfo_ != null) hash ^= WeeklyLogInfo.GetHashCode();
      if (achievementInfo_ != null) hash ^= AchievementInfo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (dailyLogInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DailyLogInfo);
      }
      if (weeklyLogInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WeeklyLogInfo);
      }
      if (achievementInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AchievementInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (dailyLogInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DailyLogInfo);
      }
      if (weeklyLogInfo_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(WeeklyLogInfo);
      }
      if (achievementInfo_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(AchievementInfo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (dailyLogInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DailyLogInfo);
      }
      if (weeklyLogInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WeeklyLogInfo);
      }
      if (achievementInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AchievementInfo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TaskLogData other) {
      if (other == null) {
        return;
      }
      if (other.dailyLogInfo_ != null) {
        if (dailyLogInfo_ == null) {
          DailyLogInfo = new global::Msg.TaskLogInfo();
        }
        DailyLogInfo.MergeFrom(other.DailyLogInfo);
      }
      if (other.weeklyLogInfo_ != null) {
        if (weeklyLogInfo_ == null) {
          WeeklyLogInfo = new global::Msg.TaskLogInfo();
        }
        WeeklyLogInfo.MergeFrom(other.WeeklyLogInfo);
      }
      if (other.achievementInfo_ != null) {
        if (achievementInfo_ == null) {
          AchievementInfo = new global::Msg.TaskLogInfo();
        }
        AchievementInfo.MergeFrom(other.AchievementInfo);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dailyLogInfo_ == null) {
              DailyLogInfo = new global::Msg.TaskLogInfo();
            }
            input.ReadMessage(DailyLogInfo);
            break;
          }
          case 18: {
            if (weeklyLogInfo_ == null) {
              WeeklyLogInfo = new global::Msg.TaskLogInfo();
            }
            input.ReadMessage(WeeklyLogInfo);
            break;
          }
          case 26: {
            if (achievementInfo_ == null) {
              AchievementInfo = new global::Msg.TaskLogInfo();
            }
            input.ReadMessage(AchievementInfo);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (dailyLogInfo_ == null) {
              DailyLogInfo = new global::Msg.TaskLogInfo();
            }
            input.ReadMessage(DailyLogInfo);
            break;
          }
          case 18: {
            if (weeklyLogInfo_ == null) {
              WeeklyLogInfo = new global::Msg.TaskLogInfo();
            }
            input.ReadMessage(WeeklyLogInfo);
            break;
          }
          case 26: {
            if (achievementInfo_ == null) {
              AchievementInfo = new global::Msg.TaskLogInfo();
            }
            input.ReadMessage(AchievementInfo);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GuideData : pb::IMessage<GuideData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GuideData> _parser = new pb::MessageParser<GuideData>(() => new GuideData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GuideData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuideData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuideData(GuideData other) : this() {
      listFinishGuide_ = other.listFinishGuide_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GuideData Clone() {
      return new GuideData(this);
    }

    /// <summary>Field number for the "listFinishGuide" field.</summary>
    public const int ListFinishGuideFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Msg.GuideType> _repeated_listFinishGuide_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Msg.GuideType) x);
    private readonly pbc::RepeatedField<global::Msg.GuideType> listFinishGuide_ = new pbc::RepeatedField<global::Msg.GuideType>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Msg.GuideType> ListFinishGuide {
      get { return listFinishGuide_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GuideData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GuideData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!listFinishGuide_.Equals(other.listFinishGuide_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= listFinishGuide_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      listFinishGuide_.WriteTo(output, _repeated_listFinishGuide_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      listFinishGuide_.WriteTo(ref output, _repeated_listFinishGuide_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += listFinishGuide_.CalculateSize(_repeated_listFinishGuide_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GuideData other) {
      if (other == null) {
        return;
      }
      listFinishGuide_.Add(other.listFinishGuide_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            listFinishGuide_.AddEntriesFrom(input, _repeated_listFinishGuide_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            listFinishGuide_.AddEntriesFrom(ref input, _repeated_listFinishGuide_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class PlayerData : pb::IMessage<PlayerData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PlayerData> _parser = new pb::MessageParser<PlayerData>(() => new PlayerData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PlayerData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Msg.PlayerDataReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerData(PlayerData other) : this() {
      userId_ = other.userId_;
      userDeviceId_ = other.userDeviceId_;
      normalData_ = other.normalData_ != null ? other.normalData_.Clone() : null;
      guideData_ = other.guideData_ != null ? other.guideData_.Clone() : null;
      levelMapPassData_ = other.levelMapPassData_ != null ? other.levelMapPassData_.Clone() : null;
      levelMapBattleData_ = other.levelMapBattleData_ != null ? other.levelMapBattleData_.Clone() : null;
      hallData_ = other.hallData_ != null ? other.hallData_.Clone() : null;
      limitedItemGetData_ = other.limitedItemGetData_ != null ? other.limitedItemGetData_.Clone() : null;
      taskLogData_ = other.taskLogData_ != null ? other.taskLogData_.Clone() : null;
      endlessMapLeaderboardData_ = other.endlessMapLeaderboardData_ != null ? other.endlessMapLeaderboardData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PlayerData Clone() {
      return new PlayerData(this);
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private long userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "userDeviceId" field.</summary>
    public const int UserDeviceIdFieldNumber = 2;
    private string userDeviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserDeviceId {
      get { return userDeviceId_; }
      set {
        userDeviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "normalData" field.</summary>
    public const int NormalDataFieldNumber = 3;
    private global::Msg.NormalData normalData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.NormalData NormalData {
      get { return normalData_; }
      set {
        normalData_ = value;
      }
    }

    /// <summary>Field number for the "guideData" field.</summary>
    public const int GuideDataFieldNumber = 4;
    private global::Msg.GuideData guideData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.GuideData GuideData {
      get { return guideData_; }
      set {
        guideData_ = value;
      }
    }

    /// <summary>Field number for the "levelMapPassData" field.</summary>
    public const int LevelMapPassDataFieldNumber = 5;
    private global::Msg.LevelMapPassData levelMapPassData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.LevelMapPassData LevelMapPassData {
      get { return levelMapPassData_; }
      set {
        levelMapPassData_ = value;
      }
    }

    /// <summary>Field number for the "levelMapBattleData" field.</summary>
    public const int LevelMapBattleDataFieldNumber = 6;
    private global::Msg.LevelMapBattleData levelMapBattleData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.LevelMapBattleData LevelMapBattleData {
      get { return levelMapBattleData_; }
      set {
        levelMapBattleData_ = value;
      }
    }

    /// <summary>Field number for the "hallData" field.</summary>
    public const int HallDataFieldNumber = 7;
    private global::Msg.HallData hallData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.HallData HallData {
      get { return hallData_; }
      set {
        hallData_ = value;
      }
    }

    /// <summary>Field number for the "limitedItemGetData" field.</summary>
    public const int LimitedItemGetDataFieldNumber = 8;
    private global::Msg.LimitedItemGetData limitedItemGetData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.LimitedItemGetData LimitedItemGetData {
      get { return limitedItemGetData_; }
      set {
        limitedItemGetData_ = value;
      }
    }

    /// <summary>Field number for the "taskLogData" field.</summary>
    public const int TaskLogDataFieldNumber = 9;
    private global::Msg.TaskLogData taskLogData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.TaskLogData TaskLogData {
      get { return taskLogData_; }
      set {
        taskLogData_ = value;
      }
    }

    /// <summary>Field number for the "endlessMapLeaderboardData" field.</summary>
    public const int EndlessMapLeaderboardDataFieldNumber = 10;
    private global::Msg.EndlessMapLeaderboardData endlessMapLeaderboardData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Msg.EndlessMapLeaderboardData EndlessMapLeaderboardData {
      get { return endlessMapLeaderboardData_; }
      set {
        endlessMapLeaderboardData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PlayerData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PlayerData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (UserDeviceId != other.UserDeviceId) return false;
      if (!object.Equals(NormalData, other.NormalData)) return false;
      if (!object.Equals(GuideData, other.GuideData)) return false;
      if (!object.Equals(LevelMapPassData, other.LevelMapPassData)) return false;
      if (!object.Equals(LevelMapBattleData, other.LevelMapBattleData)) return false;
      if (!object.Equals(HallData, other.HallData)) return false;
      if (!object.Equals(LimitedItemGetData, other.LimitedItemGetData)) return false;
      if (!object.Equals(TaskLogData, other.TaskLogData)) return false;
      if (!object.Equals(EndlessMapLeaderboardData, other.EndlessMapLeaderboardData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId != 0L) hash ^= UserId.GetHashCode();
      if (UserDeviceId.Length != 0) hash ^= UserDeviceId.GetHashCode();
      if (normalData_ != null) hash ^= NormalData.GetHashCode();
      if (guideData_ != null) hash ^= GuideData.GetHashCode();
      if (levelMapPassData_ != null) hash ^= LevelMapPassData.GetHashCode();
      if (levelMapBattleData_ != null) hash ^= LevelMapBattleData.GetHashCode();
      if (hallData_ != null) hash ^= HallData.GetHashCode();
      if (limitedItemGetData_ != null) hash ^= LimitedItemGetData.GetHashCode();
      if (taskLogData_ != null) hash ^= TaskLogData.GetHashCode();
      if (endlessMapLeaderboardData_ != null) hash ^= EndlessMapLeaderboardData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (UserDeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserDeviceId);
      }
      if (normalData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NormalData);
      }
      if (guideData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GuideData);
      }
      if (levelMapPassData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LevelMapPassData);
      }
      if (levelMapBattleData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LevelMapBattleData);
      }
      if (hallData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(HallData);
      }
      if (limitedItemGetData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LimitedItemGetData);
      }
      if (taskLogData_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TaskLogData);
      }
      if (endlessMapLeaderboardData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EndlessMapLeaderboardData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (UserId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(UserId);
      }
      if (UserDeviceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserDeviceId);
      }
      if (normalData_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(NormalData);
      }
      if (guideData_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GuideData);
      }
      if (levelMapPassData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LevelMapPassData);
      }
      if (levelMapBattleData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LevelMapBattleData);
      }
      if (hallData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(HallData);
      }
      if (limitedItemGetData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LimitedItemGetData);
      }
      if (taskLogData_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(TaskLogData);
      }
      if (endlessMapLeaderboardData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(EndlessMapLeaderboardData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (UserId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UserId);
      }
      if (UserDeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserDeviceId);
      }
      if (normalData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalData);
      }
      if (guideData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GuideData);
      }
      if (levelMapPassData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelMapPassData);
      }
      if (levelMapBattleData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LevelMapBattleData);
      }
      if (hallData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HallData);
      }
      if (limitedItemGetData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitedItemGetData);
      }
      if (taskLogData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskLogData);
      }
      if (endlessMapLeaderboardData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndlessMapLeaderboardData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PlayerData other) {
      if (other == null) {
        return;
      }
      if (other.UserId != 0L) {
        UserId = other.UserId;
      }
      if (other.UserDeviceId.Length != 0) {
        UserDeviceId = other.UserDeviceId;
      }
      if (other.normalData_ != null) {
        if (normalData_ == null) {
          NormalData = new global::Msg.NormalData();
        }
        NormalData.MergeFrom(other.NormalData);
      }
      if (other.guideData_ != null) {
        if (guideData_ == null) {
          GuideData = new global::Msg.GuideData();
        }
        GuideData.MergeFrom(other.GuideData);
      }
      if (other.levelMapPassData_ != null) {
        if (levelMapPassData_ == null) {
          LevelMapPassData = new global::Msg.LevelMapPassData();
        }
        LevelMapPassData.MergeFrom(other.LevelMapPassData);
      }
      if (other.levelMapBattleData_ != null) {
        if (levelMapBattleData_ == null) {
          LevelMapBattleData = new global::Msg.LevelMapBattleData();
        }
        LevelMapBattleData.MergeFrom(other.LevelMapBattleData);
      }
      if (other.hallData_ != null) {
        if (hallData_ == null) {
          HallData = new global::Msg.HallData();
        }
        HallData.MergeFrom(other.HallData);
      }
      if (other.limitedItemGetData_ != null) {
        if (limitedItemGetData_ == null) {
          LimitedItemGetData = new global::Msg.LimitedItemGetData();
        }
        LimitedItemGetData.MergeFrom(other.LimitedItemGetData);
      }
      if (other.taskLogData_ != null) {
        if (taskLogData_ == null) {
          TaskLogData = new global::Msg.TaskLogData();
        }
        TaskLogData.MergeFrom(other.TaskLogData);
      }
      if (other.endlessMapLeaderboardData_ != null) {
        if (endlessMapLeaderboardData_ == null) {
          EndlessMapLeaderboardData = new global::Msg.EndlessMapLeaderboardData();
        }
        EndlessMapLeaderboardData.MergeFrom(other.EndlessMapLeaderboardData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            UserDeviceId = input.ReadString();
            break;
          }
          case 26: {
            if (normalData_ == null) {
              NormalData = new global::Msg.NormalData();
            }
            input.ReadMessage(NormalData);
            break;
          }
          case 34: {
            if (guideData_ == null) {
              GuideData = new global::Msg.GuideData();
            }
            input.ReadMessage(GuideData);
            break;
          }
          case 42: {
            if (levelMapPassData_ == null) {
              LevelMapPassData = new global::Msg.LevelMapPassData();
            }
            input.ReadMessage(LevelMapPassData);
            break;
          }
          case 50: {
            if (levelMapBattleData_ == null) {
              LevelMapBattleData = new global::Msg.LevelMapBattleData();
            }
            input.ReadMessage(LevelMapBattleData);
            break;
          }
          case 58: {
            if (hallData_ == null) {
              HallData = new global::Msg.HallData();
            }
            input.ReadMessage(HallData);
            break;
          }
          case 66: {
            if (limitedItemGetData_ == null) {
              LimitedItemGetData = new global::Msg.LimitedItemGetData();
            }
            input.ReadMessage(LimitedItemGetData);
            break;
          }
          case 74: {
            if (taskLogData_ == null) {
              TaskLogData = new global::Msg.TaskLogData();
            }
            input.ReadMessage(TaskLogData);
            break;
          }
          case 82: {
            if (endlessMapLeaderboardData_ == null) {
              EndlessMapLeaderboardData = new global::Msg.EndlessMapLeaderboardData();
            }
            input.ReadMessage(EndlessMapLeaderboardData);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            UserId = input.ReadInt64();
            break;
          }
          case 18: {
            UserDeviceId = input.ReadString();
            break;
          }
          case 26: {
            if (normalData_ == null) {
              NormalData = new global::Msg.NormalData();
            }
            input.ReadMessage(NormalData);
            break;
          }
          case 34: {
            if (guideData_ == null) {
              GuideData = new global::Msg.GuideData();
            }
            input.ReadMessage(GuideData);
            break;
          }
          case 42: {
            if (levelMapPassData_ == null) {
              LevelMapPassData = new global::Msg.LevelMapPassData();
            }
            input.ReadMessage(LevelMapPassData);
            break;
          }
          case 50: {
            if (levelMapBattleData_ == null) {
              LevelMapBattleData = new global::Msg.LevelMapBattleData();
            }
            input.ReadMessage(LevelMapBattleData);
            break;
          }
          case 58: {
            if (hallData_ == null) {
              HallData = new global::Msg.HallData();
            }
            input.ReadMessage(HallData);
            break;
          }
          case 66: {
            if (limitedItemGetData_ == null) {
              LimitedItemGetData = new global::Msg.LimitedItemGetData();
            }
            input.ReadMessage(LimitedItemGetData);
            break;
          }
          case 74: {
            if (taskLogData_ == null) {
              TaskLogData = new global::Msg.TaskLogData();
            }
            input.ReadMessage(TaskLogData);
            break;
          }
          case 82: {
            if (endlessMapLeaderboardData_ == null) {
              EndlessMapLeaderboardData = new global::Msg.EndlessMapLeaderboardData();
            }
            input.ReadMessage(EndlessMapLeaderboardData);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
